<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>c++</title>
    <link href="/2023/04/15/c/"/>
    <url>/2023/04/15/c/</url>
    
    <content type="html"><![CDATA[<p>int inserpre_seq(PSeqList palist,int p,DateType x)|{<br>int p;<br>if(palist-&gt;n&gt;&#x3D;palist-&gt;MAXNUM)|<br>printf(“Overflow!\n”);<br>return 0;<br>}<br>if(p&lt;0||p&gt;palist-&gt;n){<br>    printf(“*not exist-&gt;n”);return 0;<br>}<br>for(q&#x3D;palist-&gt;n-1;q&gt;&#x3D;p;q–)<br>palist-&gt;element[q+1]&#x3D;palist-&gt;element[q];<br>palist-&gt;element[p]&#x3D;x;<br>palist-&gt;n&#x3D;palist-&gt;n+1;<br>return 1;}</p><p>itn daleteP_seq(PSeqList palist,int p){<br>    int q;<br>    if(p&lt;0||p&gt;palist-&gt;n-1){<br>        printf(“Not exist!\n”);<br>        return 0;<br>    }<br>    for(q&#x3D;p;q<palist->n-1;q++)<br>    palist-&gt;element[q]&#x3D;palist-&gt;element[q+1];<br>    palist-&gt;n-palist-&gt;n-1;<br>    return 1;<br>}</p><p>LinkList createNullList_link(void){<br>    LinkList 1list&#x3D;(LinkList)ma11oc(sizeof(struct Node));<br>    if(1list!&#x3D;NULL)1list-&gt;link&#x3D;NULL;<br>    else printf(“Out of space!\n”);<br>    return 1list;<br>}</p><p>int isNullList_link(LinkList 1list){</p><pre><code class="hljs">  return(1list-&gt;link==NULL);</code></pre><p>}</p><p>struct Node;<br>typedef styck Node<em>PNode;<br>stuct Node{<br>    DateTYpe info;<br>    Pnode  link;<br>};<br>typedef struct Node</em>LinkList;</p><p>Pnode locate_link(LinkList 1list,DateTYppe x){<br>    PNode p;<br>    if(1list&#x3D;&#x3D;NULL)return NULL;<br>    p&#x3D;1list-&gt;link;<br>    while(p！&#x3D;NULL&amp;&amp;p-&gt;info!&#x3D;x)p&#x3D;p-&gt;link;<br>    return p;</p><p>}</p><p>int inserPost_link(LinkList 1list,PNode p;DateTYPE x){<br>    PNode q&#x3D;(PNode) malloc(sizeof(stuct Node));<br>    if(q&#x3D;&#x3D;NULL){<br>        printf(“Out of space!!!\n”);<br>        return0;</p><pre><code class="hljs">&#125;else&#123;q-&gt;info=x;q-&gt;link=p-&gt;link;p-&gt;link=q;return 1 ;&#125;</code></pre><p>}</p><p>PNode locatePre_link(LinkList 1list,PNode p){<br>    PNode p1;<br>    if(1list&#x3D;&#x3D;NULL)return NULL;<br>    p1&#x3D;1list;<br>    while(p1!&#x3D;NULL&amp;&amp;p1-&gt;link!&#x3D;p)p1&#x3D;p1-&gt;link;<br>    return p1;<br>}</p><p>int deleteV_link(LinkeList 1list,DateTYpe x)<br>{<br>    PNode p,q;<br>    p&#x3D;1list;<br>    if(p&#x3D;&#x3D;NULL)return0;<br>    while(p-&gt;1link!&#x3D;NULL&amp;&amp;p-&gt;link-&gt;info!&#x3D;x)<br>    p&#x3D;p-&gt;link;<br>    if(p-&gt;link&#x3D;&#x3D;NULL){<br>        printf(“Not exist!\n”);<br>        return 0;<br>    }</p><pre><code class="hljs">else&#123;    q=p-&gt;link;    free(q);return 1;&#125;</code></pre><p>}</p><p>strct DoubleNode;<br>typedef stuct DoubleNode*PDoubleNode;<br>stuct DOubleNode{<br>    DateTYpe info;<br>    PDoubleNode 1linke,rlinke;</p><p>};<br>struct Doub;eList{<br>    PDoubleNode head;<br>    PDoubleNode rear;<br>};</p><p>#define MAXnum 100<br>#define FALSE 0<br>#define TRUE 1<br>typedef int DateTYpe;<br>void josephus_sqe(PSeqList palist,int s, int m){<br>    int s1,i,w;<br>    s1&#x3D;s-1;<br>    for(i&#x3D;palist-&gt;n;i&gt;0;i–){<br>        s1&#x3D;(s1+m-1)%1;<br>        w&#x3D;palist-&gt;element[s1];<br>        printf(“Out element%d\n”,w);<br>        deletep_seq(palist,s1);<br>    }<br>}<br>main()<br>{<br>    PSeqList jos_alist;<br>    int i,k;<br>    int n,s,m;<br>    prinf(“\n please input the values(&lt;100)of n&#x3D;”)<br>    scanf(“%d”,&amp;n);<br>    printf(“please input the valueof s &#x3D;”);<br>    scanf(“%d”,&amp;s);<br>    printf(“plese input the values of m&#x3D;”);<br>    scanf(“%d”&amp;m);<br>    jos_alist&#x3D;createNullList_seq(n);<br>    if(jos_alist!&#x3D;NULL){<br>        for(i&#x3D;0;i&lt;n;i++)<br>        insertype_seq(jos_alist,i,i+i);<br>        josephus_seq(jos-alist;s;m);<br>        free(jos_alist&#x3D;-&gt;element);<br>        free(jos_alist);<br>    }<br>}</p><p>void pop_seq(PSeqStack pastack){<br>    if(pastack-&gt;t&#x3D;&#x3D;-1)<br>    printf(“”underflow!\n);<br>    else<br>    pastack-&gt;t&#x3D;pastack-&gt;pastack&#x3D;&gt;t-1;<br>}</p><p>DateTYpe top_seq(PSeqStack pastack)</p><p>{</p><pre><code class="hljs">if(pastack-&gt;t==-1)printf(&quot;It os empty!\n&quot;);elsereturn(pasteack-&gt;s[pastacl-&gt;t]);</code></pre><p>}</p><p>struck  Nodel<br>typedef struck Node*PNode;<br>struck Node{<br>    DateTYpe info;</p><pre><code class="hljs">PNode link;</code></pre><p>};</p><p>struck LinkStack</p><p>{<br>    PNode top;</p><p>};</p><p>typedef stuck LinkStack*PLinkStack;</p><p>PLinkStack createEmpyStack_link(void)</p><p>{</p><pre><code class="hljs">PLinkStack plstack;plastack=(PLisnStack)malloc(sizeof(stuck LinkStack));if(plaStack!=NULL)platack-&gt;top=NULL;elseprintf(&quot;Out of space!\n&quot;);return platack;</code></pre><p>}</p><p>int  isEmptyStack_link(PLinkStack platack)<br>{<br>    return(plstack-&gt;top&#x3D;&#x3D;NULL);<br>}</p><p>void push_link(PLinkStack plstack,DateTYpe x)<br>{<br>    PNode p;<br>    p&#x3D;(PNode)malloc(sizeof(sryck Node));<br>    if(p&#x3D;&#x3D;NULL)<br>    printf(“Out of space!\n”);<br>    else<br>    {<br>        p-&gt;info&#x3D;x;<br>        p-&gt;link&#x3D;plstack&#x3D;&gt;top;<br>        plstack-&gt;top&#x3D;p;<br>    }<br>}</p><p>void pop_link(PLinkStack plstack){<br>    PNode p;<br>    if(isEmptyStack_link(plstack))<br>    printf(“Empty   stack pop.\n”);<br>    else<br>    {p&#x3D;plstack-&gt;top;<br>    plstack-&gt;top&#x3D;platack-&gt;top-&gt;link;<br>    free(p);</p><pre><code class="hljs">&#125;</code></pre><p>}</p><p>DateTYpe top_link(PLinkStack plstack){<br>    if(pastack-&gt;top&#x3D;&#x3D;NULL)<br>    printf(“Stack is empty!\n”);<br>    else<br>    return(plastack-&gt;top-&gt;info)<br>}</p><p>int fact(int n)<br>{<br>    int res&#x3D;n;<br>    if(n&gt;1)</p><pre><code class="hljs">res=res*fact(n-1)return res;</code></pre><p>}</p><p>int face(int n)<br>{int res&#x3D;n;<br>if(n&gt;1)</p><p>res&#x3D;res*fact(n-1)<br>return res;<br>}</p><p>int nfact(int n ){<br>    int res;<br>    PSeqStack st;<br>    st&#x3D;createEmptyStack_seq(n);<br>    while(n&gt;0){<br>        push_seq(st.n);<br>        n&#x3D;n-1;<br>    }</p><pre><code class="hljs">res=1;while(!isEmptyStack-seq(st))&#123;    pop_seq(st);&#125;free(st);return res;</code></pre><p>}</p><p>stuck seqQueque{<br>    int MAXNUM;<br>    int f,rl<br>    DateTYpe*q;</p><p>};</p><p>typedef stuct seqQueque*PSeqQueue;</p><p>void enQueue_seq(PSeqQueue paqu,DateTYpe x){<br>    if(paqu-&gt;r+1)%MAXNUM&#x3D;&#x3D;paqe-&gt;f)</p><p>printf(“Full queue.\n”);</p><p>else{<br>    paqu-&gt;q[paqu-&gt;r]&#x3D;x;<br>    paqu-&gt;r&#x3D;(paqu-&gt;r+1)%MAXNUM;<br>}<br>}</p><p>int main(){<br>{<br>    auto int a&#x3D;10l    &#x2F;&#x2F;aotu可省略，局部变量、自动变量</p><pre><code class="hljs">return0;</code></pre><p>}}<br>常见关键字:continue default do double  else enum   extern  float   for  goto   if   long  int  register   return  short   sighed   sizeof  static strct  switch  typerof  union unsigner  void  volatile  while </p><p>计算机存储数据用于存储，存储在硬盘，内存或者寄存器，高速缓存存储器，内存和寄存器之间的高速缓存寄存器（cache）<br>计算机存储数据<br>寄存器    寄存器是访问速度最快，造价最高，空间大小最小<br>高速缓存  cache访问速度比内存快<br>内存  8G&#x2F;4G&#x2F;16G&#x2F;32G<br>硬盘 500G速度最慢，容量最大<br>cpu中央处理器，从内存拿数据到中央处理器，从下到上一步一步递进，存储体系的原因register</p><p>int main(){<br>    register  int a&#x3D;10;     &#x2F;&#x2F;建议把A定义成寄存器变量<br>    寄存器是有限的不能过多</p><pre><code class="hljs">   int a=10;   a=-2;   int定义的变量是由符号的   signed int;           //有符号数   unsigned in num=0;    //无符号数return 0;</code></pre><p>}</p><p>struct结构体关键字<br>typedft类型定义<br>union    联合体共用体<br>volatile  难度较大</p><p>int main(){</p><p>&#x2F;&#x2F;typedef类型定义&#x2F;类型重定义<br>&#x2F;&#x2F;张三，小三，别名<br>typefed unsigned int u int;<br> unsigned int uum &#x3D;20;<br> u int num2 &#x3D;20;<br>    return0;<br>}</p><p>&#x2F;&#x2F;static修饰局部变量，局部变量的生命周期变长<br>&#x2F;&#x2F; static修饰全局变量改变变量的作用域，让静态的全局变量只能在自己所在的源文件出了源文件不能使用<br>&#x2F;&#x2F;static修饰函数改变函数的作用域，改变了函数的链接属性<br>&#x2F;&#x2F;static修饰函数时外部连接属性-&gt;内部连接属性</p><p>void text(){<br>    static int a&#x3D;1;   &#x2F;&#x2F;a是静态的局部变量<br>    printf(“a&#x3D;%d\n,a);   &#x2F;&#x2F;非静态结果为五个2，静态结果为23456<br>}<br>  int main(){<br>      int i&#x3D;0;<br>      while(i&lt;5){<br>        test();<br>        i++;<br>      }</p><pre><code class="hljs">return 0;</code></pre><p>  }</p><p>int main(){</p><pre><code class="hljs">return  0;</code></pre><p>}</p><p>static int g_val&#x3D;2023;<br>int main(){<br>&#x2F;&#x2F;extern   声明外部符号<br>    printf(“g_val&#x3D;%d\n”,g_val);<br>    return 0;</p><p>}</p><p>外部文件:<br>static int Add(int s,int  y)<br>{<br>    int z&#x3D;s+y;<br>    return z;<br>}</p><p>内部文件：<br>extern int Add(int,int);</p><p>int main(){<br>int a&#x3D;20;<br>int b&#x3D;10;<br>int sum&#x3D;Add(a,b);<br>printf(“%d\n”,sum);<br>    return 0;<br>}</p><p>define定义常量和宏<br>&#x2F;&#x2F;#define定义的标识符常量的方法<br>&#x2F;&#x2F;#define可以定义宏-带参数<br>Max(int x,int y){<br>    int a&#x3D;10;<br>    int b&#x3D;20;<br>}<br>#define MAX 100<br>int main(){<br>int a&#x3D;MAX;<br>int a&#x3D;10;<br>int b&#x3D;20;<br>Max(a,b)&#x3D;int max<br>printf(“max%d\n,max)<br>max&#x3D;MAX(a,b);<br>printf(“max&#x3D;%d\n”,max)</p><pre><code class="hljs">return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;宏的定义<br>#define MAX(X,Y)  (X&gt;Y?X:Y)<br>int main(){<br>int a&#x3D;MAX;<br>int a&#x3D;10;<br>int b&#x3D;20;<br>Max(a,b)&#x3D;int max<br>printf(“max%d\n,max)<br>max&#x3D;(a&gt;b?a:b)<br>printf(“max&#x3D;%d\n”,max)</p><pre><code class="hljs">return 0;</code></pre><p>}</p><p>指针（内存）<br>地址-&gt;空间(房间)</p><p>int main(){</p><pre><code class="hljs">int a=10;  //4个字节，创建一个空间int* p=&amp;a;   //&amp;取地址a   ,有一种变量是用来存放地址的-指针变量printf(&quot;%p\n&quot;,&amp;a); printf(&quot;%p\n&quot;,p);printf(&quot;%p\n&quot;,a);*p;   //*解引用操作符printf(&quot;%d\n,*a&quot;)return 0   ;</code></pre><p>}<br>int a&#x3D;10;<br>int*p&#x3D;&amp;a;<br>*p&#x3D;20    &#x2F;&#x2F;解引用操作符</p><p>int main(){<br>    char ch&#x3D;”w”;<br>   char*  pc&#x3D;&amp;ch;<br>   *pc&#x3D;’a’;<br>   printf(“%d\n”,sizeof(ch));<br>    return0;<br>}</p><p>&#x2F;&#x2F;指针的大小   32为为4个字节，64位机器，地址64为bit为组成的二进制位   为8个字节<br>int main(){</p><pre><code class="hljs">; //空语句=一个分号   int a=0;//分号一句语句的结束   return 0;</code></pre><p>}</p><p>if语句<br>if(表达式)<br>语句;</p><p>if(表达式)<br>语句1;<br>语句2;<br>else<br>语句3；</p><p>if(表达式1)<br>语句1;<br>else if(表达式2)<br>语句2;<br>else<br>语句3；</p><p>int   main(){</p><p>int age&#x3D;20;<br>if(age&lt;18&gt;)<br>   printf(“未成年\n”);<br>if(age&lt;18&gt;)<br>printf(“未成年\n”)<br>else<br>printf(“成年\n”)</p><p>if(age&lt;18&gt;)<br>    printf(“未成年”)<br>else if(age&gt;18&amp;&amp; age&lt;28&gt;)<br>    printf(“青年”);<br>else if(age&gt;&#x3D;28&amp;&amp;age&lt;50)<br>    printf(“壮年”)<br>else if(age&gt;&#x3D;50 &amp;&amp; age&lt;90)<br>    printf(“老年”);<br>else(age&gt;90)<br>    printf(“长寿”);</p><pre><code class="hljs">return0;</code></pre><p>}<br>int  main()       &#x2F;&#x2F;{}一个大括号是一个代码块<br>{          </p><pre><code class="hljs">int a=0;int b=1;if(a==1)&#123;    if(b==2)    printf(&quot;&quot;hehe) ;  else               //注意悬空else    printf(&quot;haha&quot;);        return 0;           //最终的结果为&#125;       return 0;</code></pre><p>}</p><p>int main(){</p><pre><code class="hljs">return 0;</code></pre><p>}</p><p>if书写形式的对比</p><p>if(condition){</p><pre><code class="hljs">return x;        //条件成立返回x，条件不成立返回y</code></pre><p>}</p><p>return y;</p><p>if(condition){<br>    return x;<br>}</p><pre><code class="hljs">            //条件成立返回x，条件不成立返回y</code></pre><p>else{<br>    return y;</p><p>}</p><p>int main(){<br>    int num&#x3D;4;<br>    if(num&#x3D;5){      &#x2F;&#x2F;&#x3D;为赋值     &#x3D;&#x3D;为判断相等<br>        printf(“呵呵\n”);      &#x2F;&#x2F;结果为呵呵<br>    }</p><pre><code class="hljs">                if(5==num)            &#123;                printf(&quot;呵呵\n&quot;);            &#125;return 0;</code></pre><p>}</p><p>判断一个数是否为奇数<br>输出1-100之间的奇数<br>int main(){<br>int i&#x3D;0;<br>while(i&lt;&#x3D;100){<br>    if(i%2&#x3D;&#x3D;1)<br>    printf(“%d\n”,i)<br>    i++<br>}<br>    return 0;</p><p>while(i&#x3D;100)<br>{<br>    printf(“%d”,i)<br>    i+&#x3D;2;<br>}</p><pre><code class="hljs">return 0;</code></pre><p>}</p><p>switch语句</p><p>int main(){</p><pre><code class="hljs">     int day=0;     scanf(&quot;%d&quot;,&amp;day);     if(day==1)     printf(&quot;星期一&quot;);     else if(day==2)     printf(&quot;星期二&quot;);return 0;</code></pre><p>}</p><p>switch(整形表达式){       &#x2F;&#x2F;必须为整型表达式<br>    条件语句<br>}</p><p>int main()<br>{<br>    int day&#x3D;0;<br>         scanf(“%d”,&amp;day);<br>         switch(day);<br>         {<br>        case1:           &#x2F;&#x2F;case后面必须是整形不能是浮点型<br>            printf(“工作日”);<br>            break;<br>        case2:<br>            printf(“工作日”)<br>            break;<br>        case3:<br>            printf(“工作日”)<br>            break;<br>        case4:<br>            printf(“休息日”);<br>            break;       &#x2F;&#x2F;用于跳出switch语句</p><pre><code class="hljs">default:     printf(&quot;输入错误\n&quot;)break;     &#125;return 0;</code></pre><p>}</p><p>int main(){<br>       int n&#x3D;1;<br>       int m&#x3D;2;<br>       switch(n){<br>        case 1: m++;<br>        case 2: n++;<br>        case 3:<br>        switch(n)       &#x2F;&#x2F;switch允许嵌套使用<br>        case1:n++<br>        case2:m++;n++;break;<br>       }</p><pre><code class="hljs">   case1:m++;     berak;   default:    break;&#125;   printf(&quot;&quot;m=%d,n=%d\n,m,n)     //最终的答案为5 3return 0;</code></pre><p>}<br>循环语句<br>while        for      do while<br>while(表达式)<br>循环语句</p><p>int main()<br>{</p><pre><code class="hljs">int i=1;  while()  &#123;printf(&quot;%d\n&quot;,i)i++&#125;return 0;</code></pre><p>}</p><p>int main(){<br>          if(i&#x3D;&#x3D;5)</p><p>while(i&lt;10){<br>          break;<br>          printf(“%d”,i)</p><pre><code class="hljs">      i++;&#125;return 0;</code></pre><p>}</p><p>int   main(){<br>     if(i&#x3D;&#x3D;5)<br>     {<br>        continue;<br>     printf(“%d”,i)     &#x2F;&#x2F;结果为1 2 3 4 continue的作用是结束本次循环后面的代码直接回到下次循环<br>     continue是终止本次循环的，也就是本次循环中continue后面的代码不会再执行，而是直接跳转到while语句的判断部分，进行下次循环的入口判断。<br>     i++</p><pre><code class="hljs">&#125;return0;</code></pre><p>}</p><p>int main(){<br>          int ch&#x3D;getchae();<br>          putchar(ch);<br>          printf(“%c\n”,c)<br>         int ch&#x3D;0;<br>         while((ch&#x3D;gatchar())!&#x3D;EOF)<br>         {</p><pre><code class="hljs">                           //EOF---end of file-&gt;-1        putchar(ch);       //结束需要ctrl+z     &#125;    return 0；</code></pre><p>}</p><p>int main(){<br>       char password[20]&#x3D;[0];<br>         printf(“请输入密码:”);<br>         scanf(“%s”,password)<br>         getchar();<br>         printf(“请确认(Y&#x2F;N):&gt;”)<br>         ret &#x3D;getchar():   &#x2F;&#x2F;Y&#x2F;N     getchr输入函数，输入缓冲区存放数据接收数据时输入缓冲区粗放123456\n去除123456缓冲区只剩下\n，读取一下\n<br>         if(ret&#x3D;&#x3D;’Y’)<br>         {</p><pre><code class="hljs">        printf(&quot;确认成功\n&quot;);        else&#123;            print(&quot;放弃确认\n&quot;);            &#125;     &#125;     printf(&quot;%d\n&quot;,&#39;\n&#39;);return 0;</code></pre><p>}</p><p>int main()<br>{</p><pre><code class="hljs">int i=0;      //循环变量的初始化while(i&lt;10)&#123;    i++     //顺换变量的条件&#125;</code></pre><p>   return 0;<br>}</p><p>for(表达式1；表达式2，表达式3)<br>循环语句；<br>int main(){<br>           int i&#x3D;0;       &#x2F;&#x2F;初始化  判断  调整<br>           for(i&#x3D;1:i&lt;&#x3D;10:i++){</p><pre><code class="hljs">            if(i==5)            break;           //打印的最终结果为1234            continue;        //打印的最终结果为1 2 3 4 6 7 8  9 10        printf(&quot;%d&quot;,i);       &#125;return    0;</code></pre><p>}</p><p>int main()<br>{<br>    int i&#x3D;1;<br>    while(i&lt;&#x3D;10){<br>        if(i&#x3D;&#x3D;5)<br>        continue;<br>        preintd(“%d\n”,i);<br>    i++;<br>    }<br>    return0;<br>}</p><p>int main(){</p><pre><code class="hljs">return 0;</code></pre><p>}</p><p>int main(){</p><pre><code class="hljs">   int arr[10]=&#123;1,2,3,4,5,6,7,8,9,0&#125;   int i=0;        //10次循环 10次打印   for(i=0;i&lt;10;i++)&#123;    printf(&quot;%d\n&quot;,arr[i]);   &#125;return 0;</code></pre><p>}</p><p>&#x2F;&#x2F;for循环的初始化调整判断都可以省略但是for循环的判断部分1如果被省略那判断条件就是恒为正<br>2如果不是非常熟练建议大家不要随便省略</p><p>int main()</p><p>{<br>      for(::)<br>      {<br>        printf(“”hehe\n)      &#x2F;&#x2F;死循环<br>      }<br>    return0;<br>}</p><p>int main(){</p><pre><code class="hljs">return0;</code></pre><p>}</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JAVA7</title>
    <link href="/2022/06/30/JAVA7/"/>
    <url>/2022/06/30/JAVA7/</url>
    
    <content type="html"><![CDATA[<h3 id="Api-String-StringBulider"><a href="#Api-String-StringBulider" class="headerlink" title="Api String StringBulider"></a>Api String StringBulider</h3><span id="more"></span><pre><code class="hljs">API:public  class javatext&#123;    public static void main(String[] args) &#123;        Scanner sc= new Scanner(System.in);        String line =sc.nextLine();     //Ctrl+alt+V可以生成左边内容        System.out.println(line);    &#125;&#125;String:java程序中双引号字符串都是String类的对象特点：1字符串不可变，值在创建后不可改2值不可变，但可以被共享3字符串效果相当于字符数组(char[])但是底层原理是字节数组(byte[])构造方法:public String()public String(char[] chs)public String (byte[] byt)String s=&quot;abc&quot;;public  class javatext&#123;    public static void main(String[] args) &#123;       String s1 =new String();        System.out.println(s1);        char[]chs =&#123;&#39;a&#39;,&#39;b&#39;,&#39;c&#39;&#125;;        String s2=new String(chs);        System.out.println(s2);     //abc        byte[] bys=&#123;97,98,99&#125;;        String s3=new String(bys);        System.out.println(s3);    //abc        String s4=&quot;abc&quot;;        System.out.println(s4);    //abc    &#125;&#125;String特点1通过new创建的字符串对象，每一个new都会申请一个内存空间虽然内容相同，但地址不同2以&quot;&quot;给出的字符串，只要字符序列相同，无论海马中出现几次都会建立一个String对象并在字符串中维护 public static void main(String[] args) &#123;    char[] chs =&#123;&#39;a&#39;,&#39;b&#39;,&#39;c,&#39;&#125;;    String s1=new String(chs);    String s2=new String(chs);    System.out.println(s1 ==s2);    false    String s3 =&quot;abc&quot;;    String s4=&quot;abc&quot;;    System.put.println(s3 ==s4);    //true    System.out.println(s1 ==s3);    //false &#125; 字符串的比较:==基本类型：比较的是数值引用类型：比较的是地址值字符串是对象，他比较的内容是否相等，是通过一个方法来实现的，equals()public boolean equals(Object an Objecth)public static void main(String[] args) &#123;    char[] chs =&#123;&#39;a&#39;,&#39;b&#39;,&#39;c,&#39;&#125;;    String s1=new String(chs);    String s2=new String(chs);    String s3 =&quot;abc&quot;;    String s4=&quot;abc&quot;;    //字符串地址是否相同    System.out.println(s1 ==s2);    false    System.put.println(s3 ==s4);    //true    System.out.println(s1 ==s3);    //false    //字符串内容是否相同    System.put.println(s1.equals(s2));    //true    System.out.println(s1.equals(s3));   //true    System.out.println(s3.equals(s4));    //true &#125; 例子:已知用户名个密码，请用程序实现模拟登录，总共给三次机会登陆给出提示 public  class javatext&#123;    public static void main(String[] args) &#123;              String s1=&quot;wht&quot;;              String s2=&quot;123&quot;;              for(int i=0;i&lt;3;i++) &#123;                  Scanner sc = new Scanner(System.in);                  String name = sc.nextLine();                  String pwd = sc.nextLine();                  if (name.equals(s1) &amp;&amp; pwd.equals(s2)) &#123;                      System.out.println(&quot;登陆成功&quot;);                      break;                  &#125; else &#123;                      if (2-i ==0)&#123;                          System.out.println(&quot;账户锁定，请与管理管练习&quot;);                      &#125;else&#123;                      System.out.println(&quot;登陆失败，你还有&quot; +(2-i)+ &quot;次机会&quot;);   &#125;                  &#125;     &#125;    &#125;&#125;遍历字符串:键盘录入字符串，实用程序实现在控制台遍历该字符串:public  class javatext&#123;    public static void main(String[] args) &#123;    Scanner sc =new Scanner(System.in);        String line = sc.nextLine();        //System.out.println(line.charAt(0));    //a        //System.out.println(line.charAt(1));    //b        //System.out.println(line.charAt(2));    //c    //for (int i=0;i&lt;3;i++)&#123;        //System.out.println(line.charAt(i));    //abc        //System.out.println(line.length());    //5    //&#125;          for (int i=0;i&lt;line.length();i++)&#123;              System.out.println(line.charAt(i));   //abc          &#125;    &#125;&#125;统计字符次数：键盘录入一个字符串，统计该字符串大写字母小写字母数字出现的次数public  class javatext&#123;    public static void main(String[] args) &#123;    Scanner sc = new Scanner(System.in)&#123;         String line=sc.nextLine();         int a=0;         int b=0;                 int c=0                         for(int i=0;i&lt;line.length();i++)                             char ch=line.charAt(i);                         if(ch&gt;&quot;A&quot;&amp;&amp;ch&lt;=&quot;Z&quot;&#123;                             a++;        &#125;else if(ch&gt;&#39;a&#39;&amp;&amp;ch&lt;=&quot;z&quot;)&#123;             b++                        &#125;else if(ch&gt;&#39;0&#39;&amp;&amp;ch&lt;=9&#39;&#39;)&#123;                             c++        &#125;    &#125;        System.out.println(a);        System.out.println(b);        System.out.println(c);    &#125;    &#125;斌姐字符串：定义一个方法把int数组数据拼接成一个字符串返回，例如int[]arr=&#123;1,2,3&#125;;执行方法后输出[1,2,3]public  class javatext&#123;    public static void main(String[] args) &#123;                int[]arr=&#123;1,2,3&#125;;        String s = array(arr);        System.out.println(s);    &#125;            public static  String array(int[] arr)&#123;        String s=&quot;&quot;;        s+=&quot;[&quot;;        for (int i=0;i&lt;arr.length;i++)&#123;            if (i==arr.length-1)&#123;                s+=arr[i];            &#125;else &#123;                s+=arr[i];                s+=&quot;, &quot;;            &#125;        &#125;        s+=&quot;]&quot;;        return s;            &#125;    &#125;字符串反转:public  class javatext&#123;    public static void main(String[] args) &#123;        Scanner sc =new Scanner(System.in);        String line =sc.nextLine();        String s =reverse(line);        System.out.print(s);    //cda        &#125;       public static String reverse(String s)&#123;                String ss=&quot;&quot;;                for(int i=s.length()-1;i&gt;=0;i--)&#123;                    SS +=s.charAT(i);                &#125;                return ss;                    &#125;       &#125;        &#125;    public class javatext&#123;        public station void main(String[] args)&#123;            SCanner sc =new Scanner(System.in);            String line =sc.nextline();            String s=reberse(line)l            System.out.print(s);        &#125;        public static String reverse()    &#125;         public vlass   jvatext&#123;        public station void main&#123;String[] agrs&#125;&#123;            Scanner sc=new Scanner(System.in);            String line =sc.nextline();            String s=reberse(line)1            Systrm.out.rpint(s);        &#125;        public station String reverse()     &#125;    public class jvatext&#123;        public static void main(String[] args)&#123;            Scanner sc=new Scannner(System.in);            String line=sc.nextline();            String s =reverse(line);            System.out.print(s);        &#125;        public static String reverse(String s)&#123;            String ss=&quot;&quot;;            for(int i=s.length()-1;i&gt;=0;i--)&#123;                ss =+s.charAi(i);            &#125;            return ss;        &#125;    &#125;        #define _CRT_secure_no_warntngs    //std-标准 stndard input output    //标准输入输出文件        #include  &lt;studio.h&gt;        int   main()        &#123;            printf(&quot;hehe\n&quot;);            retun 0 ;        &#125;        //int 是整数的意思        //main前面的int是表示main函数调用返回一个整型值        int main()        &#123;            retun 0;   //返回0        &#125;    &#125;      int main()&#123;            //printf打印函数       // #incude 包含文件      printf(&quot;hellow   bite&quot;);    return 0;   &#125;   #include  &lt;studio.h&gt; int main() &#123;    printf(&quot;hellw/m&quot;)    retunrn0; &#125;      //chart  //字符型数据类型   short  // 短整型   int    //整形   long    //长整型    longlong  //长整型    float   //单精度浮点型    double  //双精度浮点型    intd main()     &#123;        //$d 打印整形        //%c  打印字符        //%f =打印浮点小数打印小鼠        //%p  打印地址的形式打印        //%x 打印十六进制数字                char ch=&#39;A&#39;;   //&#39;A&#39;;//内存         printf(&quot;%c&quot;);//%c打印字符格式的数据        short int//短整型        //int  整形        //long 长整型        long num=100;        printf(%d/n)        int age=20  ;        printf(%d) //%d打印整形十进制数据        float f=5.0;        print(&quot;%f\n&quot;,f);        fouble d=3.14;        printf(&quot;%lf\n&quot;,d)        return 0;    &#125;       int main()    &#123;        printf(&quot;%d\n&quot;,sizeof(char));//    1           printf(&quot;%d\n&quot;,sizeof(short));//   2        printf(&quot;%d\n&quot;,sizeof(int));//     4        printf(&quot;%d\n&quot;,sizeof(long));//    4/8        printf(&quot;%d\n&quot;,sizeof(longlong));//8        printf(&quot;%d\n&quot;,sizeof(float));//   4        printf(&quot;%d\n&quot;,sizeof(double));//  8        int age =20; //4  32        short age=20; // 2 16        retun 0;   //字节      计算机单位      bit 比特位  计算机是硬件--通电         正电(1) 负电(0)         二进制  0 1         十进制 0-9          十二进制0-B      byte 字节      1个字节=8比特位      kp  mb  gb tb  pb //1024进制        //c语言标准规定        sizeof(long)&gt;sizeof(int)    &#125;    int main()    &#123;        short age=20; //向内存申请两个字节=16bit位，用来存放20        float weight =95.6f;//像内存申请4个字节        return 0;    &#125;        int a=100;//全局变量，定义在代码块之外的变量    int main()    &#123;            int a=10;//局部变量和全局变量名字建议不要想同荣夷吾为产生bug，当局部变量和全局变量名字相同的时候，局部变量优先。        //局部变量定义在代码块内部的变量        printf(&quot;%d\n&quot;,a);        return 0;            &#125;    int main()    &#123;        //计算两个数的和        int num 1=0;        int num2  =0;        int sum = 0;        //输入数据使用输入函数scanf        scanf(&quot;%d%d&quot;,&amp;num1,&amp;num2);//&amp;取地址符号         /c语言与法规定，变量要定义在当前代码块的最前面        sum=num1+num2;        printf(&quot;%d\n&quot;,sum);        retun 0;    &#125;     int main()     int global=2020;  //全局变量的作用域  void text()&#123;    printf(&quot;text()--%d&quot;,global);  &#125;   &#123;    int num=0; //聚币变量的作用域    printf(&quot;num=%d\n&quot;,num);    return 0;               //   &#125;   int g_val=2021;   printf(&quot;g_val=%d\n,g_val)//未声明的标识符   extern int g-val //extern声明外部文件   int main()&#123;    &#123;        int a =10;        printf(&quot;a=%d\n&quot;,a);//ok    &#125;    printf(&quot;a=%d\n&quot;,a); //error    return 0;   &#125;   //全局变量的生命周期是整个程序的生命周期       //scanf是c语言提供的    scanf-s不是标准c语言提供的，vs编译器所提供的    不具有跨平台性/可移植性    //scanf    /strcpy    //strien    //straet    //不安全的文件    //strupy_s    //vs编译器所提供的//加在源文件的第一行#define....   int main()&#123;    &#123;        const int num =3;//字面常量 const为常属性        /const修饰的常变量        3//字面变量        3.14//字面常量        printf(&quot;%d/n&quot;,num);        num=9;        printf(&quot;%d\n&quot;,num);               return 0;                       int n=10;             int arr[10]=&#123;0&#125;;                          const intb-10;  //n是变量，但是又有常属性，所以我们说n是常变量             int arr[b]; //error             b=20; &#125;   &#125;int main() #define  MAX10&#123;   //#defin定义的标识符常量        int arr[MAX]=[0];        printf(&quot;%d\n,MAX);        return 0;    &#125;//枚举常量枚举一一列举//性别：男，女，保密//三原色：红，黄，蓝//星期：1，2，3，4，5，6，7//枚举关键字-enumenum Sex&#123;MALE,FEMALE,SECRET&#125;;//MALE ,FEMALE SECRET 枚举常量int main()&#123;enum Sex s=MALE;printtf(&quot;%d\n&quot;,MALE);printtf(&quot;%d\n&quot;,FEMALE);printtf(&quot;%d\n&quot;,SECRET);    return 0;&#125;int  main() enum Color&#123;        RED ,        YELLOW ,        BLUE    &#125;;            &#123;enum Color clolr=BLUE;color =YELLOW;BLUE=6;    //error    return 0;   //大括号里面的枚举常量不可改&#125;//枚举关键字-enum &quot;abcdef&quot;    &quot;hellow  bit&quot;     &quot;  &quot;  //空字符串int main()&#123;   char arr1[]=&quot;abc&quot;   //&quot;abc&quot;里面不只有abc还有个”0“ 0指的是字符串的结束标志     char arr2[]=&#123;&#39;a&#39;,&#39;b&#39;,&#39;c&#39;&#125;   //数组的类型可以直接定义   printf(&quot;$s\n&quot;,arr1);   //打印结果为abc   printf(&quot;%s\n&quot;,arr2);   //打印结果出错//字符串的结束标志是一个\0的转移定义每个字符的值都有一个定义范围0-72//a--97      A---65    ASCII编码方式   ASCII码值    return 0;    打印字符串的时候需要用到ASCII码编码&#125;int main()&#123;    char arr[]=&quot;abc&quot;    char  arr2[]=&quot;a&quot;&quot;b&quot;&quot;c&quot;;    printtf(&quot;&quot;%d\nstrken(arr1) ,)//strlen -string length计算字符串长度  计算结果为3    printf(&quot;%d\n&quot;,strlen(arr2)); //  计算结果为15(叫做随机值)      \0是字符串的结束标志    若&quot;a&quot;&quot;b&quot;&quot;c&quot;&quot;\0&quot;则最终结果为3return 0;&#125;  int main()&#123;    char  arr1[]=&quot;abcde&quot;&#39;    char   arr2[]=&quot;a&quot;&quot;b&quot;&quot;c&quot;&quot;d&quot;;    printf(&quot;%d\n&quot;,strlen(arr1));    print(&quot;%d\n&quot;,strlen(arr2));    return 0;        &#125;转义字符：转变原来的意思int main()&#123;    printf(&quot;abc\n&quot;)     printf(&quot;%c\n&quot;,&#39;b&#39;);    printf(&quot;$c\n&quot;,&#39;\&#39;&#39;),//单引号依旧可以打印出来    printf(&quot;%c\n&quot;,&quot;\&quot;&quot;) // 斜杠是用来转移其他字符的 //\n为换行，转义字符的一种    return 0;&#125;    int main()&#123;    printf(&quot;c:\\text\\32\\text.c&quot;);   //这里的、也是转义符    \t水平制表符(TAB键),双斜杠用于表示一个反斜杠，防止被解释为一个转移符号    return 0;  &#125;  //   \?   在书写连续多个问好时使用，防止他们被解析撑伞字母词  // \`  用于表示字符常量  // \: 用于表示一个字符串内部的双引号  // \a 警告字符  // \b 退格符  // \f 进支付  // \n 换行  // \r 回车  // \t 水平制表符  // \v垂直制表符  // \ddd  ddd表示1-3个八进制的数字列入:\130 x  // \xdd dd表示2个十六进制数字 列入:\30  int marn()&#123;    printf(%d\n),strlen(&quot;c:\text\32\test.c&quot;));    printf(&quot;%d\n&quot;,&#39;\32&#39;);   //转化成十进制作为ASCII码对应的字符    printf(&quot;%d\n&quot;,&#39;132&#39;)  //把132堪称8进制转化成十进制来查看结果输出的结果为大写的Z            //输出的结果为12   \32---32是两个八进制数字    32作为8进制代表的那个十进制数字作为ASCII码对应的字符    32---&gt;10进制数字 26---？作为ASCII码代表的数值    return 0;  &#125;int  main()&#123;    printf(&quot;%d\n&quot;,&#39;\x61&#39;);   //输出的结果为A   、61为16进制转换为10进制来计算    return 0;&#125;//c语言风格的注释/* */ 不能嵌套 c++风格的注释//可以嵌套int main()&#123;    printf(&quot;%d \n&quot;,&quot;&quot;)     return 0;&#125;//选择语句int main()&#123;  int input=0;    printf(&quot;加入bit\n&quot;);    printf(&quot;你要好好学习吗?(1,2&gt;&quot;);    scanf(&quot;%d&quot;,&amp;inout); //1/0    if(input==1)    printf(&quot;好offer\n&quot;);    else    printf(&quot;卖红薯\n&quot;);&#125;int main()&#123;         printf(&quot;加入比特\n&quot;)；         while(line&lt;20000)        &#123; printf(&quot;桥一行代码\n&quot;);        line++;&#125;        printf(&quot;好offer&quot;);    return 0;&#125;int ADD( int x;int y)&#123;    intz=x+y;    return z;&#125;  //函数集里面为    ADD函数为自定义函数还有种为库函数int main()&#123;         int num1=10;         int num2=20;         int sum =0;         int a =100;         int b=200;         //sum=num1+num2;         sum=ADD(num1,num2);         sum=ADD(a,b)；         sum =ADD(2，3)；         //sum=a+b;         printf(&quot;sum=%d\n&quot;,sum);         return 0；&#125;int main()&#123;       int arr[10]= &#123;1,2,3,4,5,6,7,8,9,0&#125;; //定义一个存放是个整型数字的数组       //char ch[20];       //float arr2[5];       int i=0;       while(i&lt;10)       &#123;        printf(&quot;&quot;%d\n),arr[i];        i++;       &#125;       printf(&quot;%d\n&quot;,arr[4])  //得出的结果为5    return 0;&#125;//arr      1234567890下标：0123456789下标从0开始计算arr[下标]//操作符算术操作符/移位操作符/位操作符/int main()&#123;    int a=5/2;  //取模    printf(&quot;%d\n&quot;,a);    return 0;&#125;int main()&#123;         //&lt;&lt;左移         &gt;&gt;右移         int a=1;         //整形1占4个字节32个bit位        000000000000000000000000000001         int b=a&lt;&lt;1;        //000000000000000000000000000010        printf(&quot;%d\n&quot;,b);        print(&quot;%d\n&quot;,a);  //对A进行左移或者右移啊、        的值不变            return 0;&#125;//二进制 1        1          1      1        1^*2^3   1*2^2    1*2^1   1*2^0        8         4          2      113       1         1          0      1 int main()&#123;   //2进制位操作   //&amp;按位与   //|按位或   //^按位异或   int a=3;   int b=5;   int c=a&amp;b;   //011   101   == 111为c的最终值   int d =a^b;   //011    101 ==110    按位异或的计算规则，对应的二进制为相同则为0，对应的二进制位相异则为1     return 0;&#125;//赋值操作符int main()&#123;    int a-10;    a-20;    //赋值      ==判断相等    a=a+10;    a+=10;   //与上方等价    a=a-20    a-+20;      //与上方的等价    //符合赋值符    //=+ -+ ……= %=  ￥=  &amp;=    return 0;&#125;//单目操作符    //双目操作符//三目操作符int main()&#123;    inta =10;    int b=20;    a+b;  //双目操作符    return 0;&#125;int main()&#123;    inta =10;   printf(&quot;%d\n&quot;,a);  //最终的结果为10   printf(&quot;%d\n&quot;,!a); //最终的结果为0    return 0;&#125;//1  罗基范操作//-负值//+正值//&amp;取地址//sizeof  操作数的类型长度（以字节为单位）//~  对一个数的二进制为按位取反//————前置，后置--//++   前置，后置++//* 间接访问操作符（解引用操作符）//（类型）强制类型转换int main()&#123;    int a=10;  printf(&quot;%d\n&quot;,sizeof(a));     //4  printf(&quot;%d\n&quot;,sizeof(int));    //sizeof计算的是变量或者类型所占的空间大小，单位是字节    4printf(&quot;%d\n&quot;,sizeofa);      /括号可以省略4printf(&quot;%d\n&quot;,sizeofint);    //答案出错    return 0;&#125;int   main()&#123;    int arr[10]=&#123;0&#125;   //10个整形元素的数组    //10*sizeof(int)=40    print(&quot;%d\n&quot;,sizeof(arr));    //计算数组的元素个数    //sizeof数组总大小，每个元素的大小    sz=sizeof(arr)/sizeof(arr[0]);    printf(&quot;sz=%d\n&quot;,sz);    return 0;&#125;int main()&#123;           //字符串的结束标志位&#39;\0&#39;     //&#39;\0&#39;  转义字符-0     //0    数字0     //&#39;0&#39; -&gt;字符0     48    return 0;&#125;int main()&#123;     printf(&quot;%d\n&quot;,strlen(&quot;c:\text\121\0&quot;))    return 0;&#125; int main()&#123;    int a=10l    int arr[]=&#123;1,2,3,4,5,6&#125;;     //6*4=24---》int[6]    printf(&quot;%d\n&quot;,sizeof(a));    //4     printf(&quot;%d\n&quot;,sizeof(int));  //4     printf(&quot;%d\n&quot;,sizeofa);    //4      printf(&quot;%d\n&quot;,sizeofint);  //error       printf(&quot;%d\n&quot;,sizeof(arr));    //计算数组大小，单位是字节       printf(&quot;%d\n&quot;,sizeof(arr)/sizeof(arr[0]));  //6    return 0;&#125;int main()&#123;    int a=0;     //4个字节，32bit位    int b=~a;//b是有符号的整形    //~按(2进制)位取反    printf(&quot;%d\n&quot;,b);//结果为-1，使用的打印的是这个数的原码    //原码，反码，补码    //附属在内存中存储的是二进制补码    return 0;&#125;int main()&#125;int a=10;int b=a++; //后置++,先使用后++int b=++a; //前置++,先++再使用  //11  11printf(&quot;a=%d b=%d\n&quot;,a,b);//11  10return 0;int main()&#123;    int a =(int)3.14;            return 0;&#125;关系操作符&gt;=   !=不相等     ==相等逻辑操作符 &amp;&amp;   逻辑与   ||逻辑或int main()&#123;    int a=3;    int b=5;    int c=a&amp;&amp;b;    int d= a||b;    printf(&quot;%d\n&quot;,c);    printf(&quot;%d\n&quot;,d)    return 0;&#125;条件操作符e1?e2:e3逗号表达式e1,e2,e3,e4...enint main()&#123;    int a=10;    int b=20;    int max=0;    if(a&gt;b)    return 0;&#125;</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JAVA6</title>
    <link href="/2022/06/29/JAVA6/"/>
    <url>/2022/06/29/JAVA6/</url>
    
    <content type="html"><![CDATA[<h3 id="private"><a href="#private" class="headerlink" title="private"></a>private</h3><span id="more"></span><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-variable language_">this</span>关键字：<br><span class="hljs-number">1.</span><span class="hljs-variable language_">this</span>修饰的变量用于指代成员变量(解决局部变量隐藏成员变量问题)<br>方法的形参如果与成员变量同名，不带<span class="hljs-variable language_">this</span>修饰的变量指的是形参，而不是成员变量<br>方法的形参没有与成员变量同名，不带<span class="hljs-variable language_">this</span>修饰的变量名指的是成员变量<br>方法被哪个对象调用，<span class="hljs-variable language_">this</span>就代表那个对象<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span> &#123;<br>   <span class="hljs-keyword">private</span> <span class="hljs-title class_">String</span> name;<br>   <span class="hljs-keyword">private</span>  int age;<br>   <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">steName</span>(<span class="hljs-params"><span class="hljs-built_in">String</span> name</span>)&#123;<br>      <span class="hljs-comment">// name =name;</span><br>       <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span>=name;<br>   &#125;<br>   <span class="hljs-keyword">public</span> <span class="hljs-title class_">String</span> <span class="hljs-title function_">getName</span>(<span class="hljs-params"></span>)&#123;<br>       <span class="hljs-keyword">return</span> name;<br>   &#125;<br>   <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">steAge</span>(<span class="hljs-params">int age</span>)&#123;<br>       <span class="hljs-variable language_">this</span>.<span class="hljs-property">age</span> =age;<br>   &#125;<br>   <span class="hljs-keyword">public</span> int <span class="hljs-title function_">getAge</span>(<span class="hljs-params"></span>)&#123;<br>       <span class="hljs-keyword">return</span> age;<br>   &#125;<br>   <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">show</span>(<span class="hljs-params"></span>)&#123;<br>       <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(name+age);<br>   &#125;&#125;<br>++++++<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">javatext</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>) &#123;<br>        <span class="hljs-title class_">Student</span> s=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>();<br>        s.<span class="hljs-title function_">steName</span>(<span class="hljs-string">&quot;林青霞&quot;</span>);<br>        s.<span class="hljs-title function_">steAge</span>(<span class="hljs-number">30</span>);<br>        s.<span class="hljs-title function_">show</span>();<br>        <span class="hljs-comment">//使用get方式获取成员变量的值</span><br>        <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(s.<span class="hljs-title function_">getName</span>()+<span class="hljs-string">&quot;---&quot;</span>+s.<span class="hljs-title function_">getAge</span>());<br>    &#125;<br><br>封装:<br>面向对象的三大特征(封装、继承、多态)<br>构造方法:<br>修饰符 类名(参数)&#123;<br><br>&#125;<br>修饰符一般用<span class="hljs-keyword">public</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">javatext</span> &#123;<br>  <span class="hljs-keyword">private</span> <span class="hljs-title class_">String</span> name;<br>  <span class="hljs-keyword">private</span>  int age;<br>  <span class="hljs-keyword">public</span> <span class="hljs-title function_">javatext</span>(<span class="hljs-params"></span>)&#123;<br>      <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;无参构造方法&quot;</span>);<br>  &#125;<br>  <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">show</span>(<span class="hljs-params"></span>)&#123;<br>      <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(name+age);<br>  &#125;<br>&#125;<br>+++<br><span class="hljs-keyword">public</span>  <span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>) &#123;<br>        javatext s =<span class="hljs-keyword">new</span> <span class="hljs-title function_">javatext</span>();<br>        s.<span class="hljs-title function_">show</span>();<br>    &#125;<br>&#125;<br>标准类制作:<br><span class="hljs-keyword">public</span>  <span class="hljs-keyword">class</span> <span class="hljs-title class_">javatext</span>&#123;<br>   <span class="hljs-keyword">private</span> <span class="hljs-title class_">String</span> name;<br>   <span class="hljs-keyword">private</span>  int  age ;<br>   <span class="hljs-keyword">public</span> <span class="hljs-title function_">javatext</span>(<span class="hljs-params"></span>)&#123;<br><br>   &#125;<br>   <span class="hljs-keyword">public</span> <span class="hljs-title function_">javatext</span>(<span class="hljs-params"><span class="hljs-built_in">String</span> name,int age</span>)&#123;<br>       <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span>=name;<br>       <span class="hljs-variable language_">this</span>.<span class="hljs-property">age</span>=age;<br><br>   &#125;<br>   <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setName</span>(<span class="hljs-params"><span class="hljs-built_in">String</span> name</span>)&#123;<br>       <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span>=name;<br>   &#125;<br>   <span class="hljs-keyword">public</span> <span class="hljs-title class_">String</span> <span class="hljs-title function_">getName</span>(<span class="hljs-params"></span>)&#123;<br>       <span class="hljs-keyword">return</span>  name;<br>   &#125;<br>   <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">setAge</span>(<span class="hljs-params">int age</span>)&#123;<br>       <span class="hljs-variable language_">this</span>.<span class="hljs-property">age</span>=age;<br>   &#125;<br>   <span class="hljs-keyword">public</span> int <span class="hljs-title function_">getAge</span>(<span class="hljs-params"></span>)&#123;<br>       <span class="hljs-keyword">return</span> age;<br>   &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">show</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(name+age);<br>    &#125;<br>&#125;<br>++++<br><span class="hljs-keyword">public</span>  <span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>) &#123;<br>        javatext s1 =<span class="hljs-keyword">new</span> <span class="hljs-title function_">javatext</span>();<br>        s1.<span class="hljs-title function_">setName</span>(<span class="hljs-string">&quot;林青霞&quot;</span>);<br>        s1.<span class="hljs-title function_">setAge</span>(<span class="hljs-number">30</span>);<br>        s1.<span class="hljs-title function_">show</span>();<br>        javatext s2 =<span class="hljs-keyword">new</span> <span class="hljs-title function_">javatext</span>(<span class="hljs-string">&quot;林青霞&quot;</span>,<span class="hljs-number">30</span>);<br>        s2.<span class="hljs-title function_">show</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JAVA5</title>
    <link href="/2022/06/28/JAVA5/"/>
    <url>/2022/06/28/JAVA5/</url>
    
    <content type="html"><![CDATA[<h3 id="例子-Debug-类和对象"><a href="#例子-Debug-类和对象" class="headerlink" title="例子 Debug 类和对象"></a>例子 Debug 类和对象</h3><span id="more"></span><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs csharp">输出[<span class="hljs-number">11</span>,<span class="hljs-number">22</span>,<span class="hljs-number">33</span>,<span class="hljs-number">44</span>,<span class="hljs-number">55</span>]<br>System.<span class="hljs-keyword">out</span>.println()输出并换行<br>System.<span class="hljs-keyword">out</span>.print()输出不换行<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ScannerDemo</span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span>(<span class="hljs-params">String[] args</span>)</span>&#123;<br>        <span class="hljs-built_in">int</span>[] arr =&#123;<span class="hljs-number">11</span>,<span class="hljs-number">22</span>,<span class="hljs-number">33</span>,<span class="hljs-number">44</span>,<span class="hljs-number">55</span>&#125;;<br>        &#125;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">printArray</span>(<span class="hljs-params"><span class="hljs-built_in">int</span>[] arr</span>)</span>&#123;<br>             System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;[&quot;</span>)<br>            <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> x=<span class="hljs-number">0</span>;x&lt;arr.lengthlx++)&#123;<br>                <span class="hljs-keyword">if</span>(x ==arr.length<span class="hljs-number">-1</span>)&#123;<br>                System.<span class="hljs-keyword">out</span>.print(arr[x]);<br>                &#125;<span class="hljs-keyword">else</span>&#123;<br>                    System.<span class="hljs-keyword">out</span>.print(arr[x]+<span class="hljs-string">&quot;,&quot;</span>);<br>                    &#125;<br>                &#125;<br>            &#125;<br>            System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;]&quot;</span>)<br>        &#125;<br>        &#125;<br>例子：数组最大值<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ScannerDemo</span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span>(<span class="hljs-params">String[] args</span>)</span>&#123;<br>            <span class="hljs-built_in">int</span>[] arr=&#123;<span class="hljs-number">12</span>,<span class="hljs-number">45</span>,<span class="hljs-number">98</span>,<span class="hljs-number">73</span>,<span class="hljs-number">60</span>&#125;;<br>            <span class="hljs-built_in">int</span> number=getmax(arr);<br>            System.<span class="hljs-keyword">out</span>.println(number);<br><br>        &#125;<br>             <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span> <span class="hljs-title">getmax</span>(<span class="hljs-params"><span class="hljs-built_in">int</span>[] arr</span>)</span>&#123;<br>                <span class="hljs-built_in">int</span> max=arr [<span class="hljs-number">0</span>];<br>                <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> x=<span class="hljs-number">1</span>;x&lt;arr.lenggthlx++)&#123;<br>                    <span class="hljs-keyword">if</span>(arr[x]&gt;max)&#123;<br>                        max= arr[x];<br>                    &#125;<br>                &#125;<br>             &#125;<br>        &#125;<br>Debug:<br>如果数据来自键盘输入，必须输入数据<br></code></pre></td></tr></table></figure><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><code class="hljs fsharp">练习题<span class="hljs-number">89</span><span class="hljs-number">-98</span>：<br><span class="hljs-operator">/*</span>import java.util.Scanner;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-keyword">javatext</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[] args) &#123;<br>        Scanner sc <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> Scanner(System.<span class="hljs-keyword">in</span>);<br>        int week <span class="hljs-operator">=</span>sc.nextInt();<br>        <span class="hljs-keyword">if</span> (week<span class="hljs-operator">&lt;</span><span class="hljs-number">1</span><span class="hljs-operator">||</span>week<span class="hljs-operator">&gt;</span><span class="hljs-number">7</span>)&#123;<br>    System.out.println(<span class="hljs-string">&quot;输入有误&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(week<span class="hljs-operator">==</span><span class="hljs-number">1</span>)&#123;<br>            System.out.println(<span class="hljs-string">&quot;1&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(week<span class="hljs-operator">==</span><span class="hljs-number">2</span>)&#123;<br>            System.out.println(<span class="hljs-string">&quot;2&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(week<span class="hljs-operator">==</span><span class="hljs-number">3</span>)&#123;<br>            System.out.println(<span class="hljs-string">&quot;3&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(week<span class="hljs-operator">==</span><span class="hljs-number">4</span>)&#123;<br>            System.out.println(<span class="hljs-string">&quot;4&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(week<span class="hljs-operator">==</span><span class="hljs-number">5</span>)&#123;<br>            System.out.println(<span class="hljs-string">&quot;5&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(week<span class="hljs-operator">==</span><span class="hljs-number">6</span>)&#123;<br>            System.out.println(<span class="hljs-string">&quot;6&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(week<span class="hljs-operator">==</span><span class="hljs-number">7</span>)&#123;<br>            System.out.println(<span class="hljs-string">&quot;7&quot;</span>);<br>        &#125;<br>    &#125;<br>    &#125;<span class="hljs-operator">*/</span><br>    import java.util.Scanner;<br><span class="hljs-operator">/*</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-keyword">javatext</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[] args) &#123;<br>        Scanner sc <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> Scanner(System.<span class="hljs-keyword">in</span>);<br>        int week <span class="hljs-operator">=</span>sc.nextInt();<br>        switch (week)&#123;<br>            case <span class="hljs-number">1</span><span class="hljs-operator">:</span><br>            System.out.println(<span class="hljs-string">&quot;1&quot;</span>);<br>            break;<br>            case <span class="hljs-number">2</span><span class="hljs-operator">:</span><br>                System.out.println(<span class="hljs-string">&quot;2&quot;</span>);<br>                break;<br>            case <span class="hljs-number">3</span><span class="hljs-operator">:</span><br>                System.out.println(<span class="hljs-string">&quot;3&quot;</span>);<br>                break;<br>            case <span class="hljs-number">4</span><span class="hljs-operator">:</span><br>                System.out.println(<span class="hljs-string">&quot;4&quot;</span>);<br>                break;<br>            case <span class="hljs-number">5</span><span class="hljs-operator">:</span><br>                System.out.println(<span class="hljs-string">&quot;5&quot;</span>);<br>                break;<br>            case <span class="hljs-number">6</span><span class="hljs-operator">:</span><br>                System.out.println(<span class="hljs-string">&quot;6&quot;</span>);<br>                break;<br>            case <span class="hljs-number">7</span><span class="hljs-operator">:</span><br>                System.out.println(<span class="hljs-string">&quot;7&quot;</span>);<br>                break;<br>            <span class="hljs-keyword">default</span><span class="hljs-operator">:</span><br>                System.out.println(<span class="hljs-string">&quot;输入有误&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<span class="hljs-operator">*/</span><br><span class="hljs-operator">/*</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-keyword">javatext</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[] args) &#123;<br>        <span class="hljs-keyword">for</span> (int x<span class="hljs-operator">=</span><span class="hljs-number">1</span>;x<span class="hljs-operator">&lt;</span><span class="hljs-number">101</span>;x<span class="hljs-operator">++</span>)&#123;<br>            <span class="hljs-keyword">if</span>(x<span class="hljs-operator">%</span><span class="hljs-number">10</span><span class="hljs-operator">==</span><span class="hljs-number">7</span><span class="hljs-operator">||</span>x<span class="hljs-operator">/</span><span class="hljs-number">10</span><span class="hljs-operator">%</span><span class="hljs-number">10</span><span class="hljs-operator">==</span><span class="hljs-number">7</span><span class="hljs-operator">||</span>x<span class="hljs-operator">%</span><span class="hljs-number">7</span><span class="hljs-operator">==</span><span class="hljs-number">0</span>)&#123;<br>                System.out.println(x);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<span class="hljs-operator">*/</span><br><span class="hljs-operator">/*</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-keyword">javatext</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[] args) &#123;<br>        int[] arr <span class="hljs-operator">=</span><span class="hljs-keyword">new</span> int[<span class="hljs-number">20</span>];<br>        arr[<span class="hljs-number">0</span>]<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br>        arr[<span class="hljs-number">1</span>]<span class="hljs-operator">=</span><span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">for</span>(int x<span class="hljs-operator">=</span><span class="hljs-number">2</span>;x<span class="hljs-operator">&lt;</span>arr.length;x<span class="hljs-operator">++</span>) &#123;<br>            arr[x]<span class="hljs-operator">=</span>arr[x<span class="hljs-number">-2</span>]<span class="hljs-operator">+</span>arr[x<span class="hljs-number">-1</span>];<br>        &#125;<br>    &#125;<br>&#125;<span class="hljs-operator">*/</span><br><span class="hljs-operator">/*</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-keyword">javatext</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[] args) &#123;<br>        <span class="hljs-keyword">for</span>(int x<span class="hljs-operator">=</span><span class="hljs-number">0</span>;x<span class="hljs-operator">&lt;</span><span class="hljs-number">21</span>;x<span class="hljs-operator">++</span>)&#123;<br>            <span class="hljs-keyword">for</span>(int y<span class="hljs-operator">=</span><span class="hljs-number">0</span>;y<span class="hljs-operator">&lt;</span><span class="hljs-number">34</span>;y<span class="hljs-operator">++</span>)&#123;<br>               int z<span class="hljs-operator">=</span> <span class="hljs-number">100</span><span class="hljs-operator">-</span>x<span class="hljs-operator">-</span>y;<br><br>                <span class="hljs-keyword">if</span>(z<span class="hljs-operator">%</span><span class="hljs-number">3</span><span class="hljs-operator">==</span><span class="hljs-number">0</span> <span class="hljs-operator">&amp;&amp;</span> <span class="hljs-number">5</span><span class="hljs-operator">*</span>x<span class="hljs-operator">+</span><span class="hljs-number">3</span><span class="hljs-operator">*</span>y<span class="hljs-operator">+</span>z<span class="hljs-operator">/</span><span class="hljs-number">3</span><span class="hljs-operator">==</span><span class="hljs-number">100</span>)&#123;<br>                    System.out.println(x<span class="hljs-operator">+</span><span class="hljs-string">&quot;,&quot;</span><span class="hljs-operator">+</span>y<span class="hljs-operator">+</span><span class="hljs-string">&quot;,&quot;</span><span class="hljs-operator">+</span>z);<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<span class="hljs-operator">*/</span><br><span class="hljs-operator">/*</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-keyword">javatext</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[] args) &#123;<br>           int[] arr <span class="hljs-operator">=</span> &#123;<span class="hljs-number">68</span>,<span class="hljs-number">27</span>,<span class="hljs-number">95</span>,<span class="hljs-number">88</span>,<span class="hljs-number">171</span>,<span class="hljs-number">996</span>,<span class="hljs-number">51</span>,<span class="hljs-number">210</span>&#125;;<br>           int sum<span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br>           <span class="hljs-keyword">for</span>(int x<span class="hljs-operator">=</span><span class="hljs-number">0</span>;x<span class="hljs-operator">&lt;</span>arr.length;x<span class="hljs-operator">++</span>)&#123;<br>               <span class="hljs-keyword">if</span>(arr[x]<span class="hljs-operator">%</span><span class="hljs-number">10</span><span class="hljs-operator">!=</span><span class="hljs-number">7</span> <span class="hljs-operator">&amp;&amp;</span> arr[x]<span class="hljs-operator">/</span><span class="hljs-number">10</span><span class="hljs-operator">%</span><span class="hljs-number">10</span><span class="hljs-operator">!=</span><span class="hljs-number">7</span> <span class="hljs-operator">&amp;&amp;</span> arr[x]<span class="hljs-operator">%</span><span class="hljs-number">2</span><span class="hljs-operator">==</span><span class="hljs-number">0</span>)&#123;<br>                   sum<span class="hljs-operator">+=</span> arr[x];<br>               &#125;<br>               System.out.println(sum);<br>        &#125;<br>    &#125;<br>&#125;<span class="hljs-operator">*/</span><br><span class="hljs-operator">/*</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-keyword">javatext</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[] args) &#123;<br>        int[] arr<span class="hljs-operator">=</span>&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125;;<br>        int[] arr2<span class="hljs-operator">=</span>&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>&#125;;<br>        boolean flag<span class="hljs-operator">=</span>compare(arr,arr2);<br>        System.out.println(flag);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> boolean compare(int[] arr,int[]arr2)&#123;<br>        <span class="hljs-keyword">if</span>(arr.length <span class="hljs-operator">!=</span>arr2.length)&#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>        <span class="hljs-keyword">for</span>(int x<span class="hljs-operator">=</span><span class="hljs-number">0</span>;x<span class="hljs-operator">&lt;</span> arr.length;x<span class="hljs-operator">++</span>)&#123;<br>            <span class="hljs-keyword">if</span>(arr[x]<span class="hljs-operator">!=</span>arr2[x])&#123;<br>                <span class="hljs-keyword">return</span>  <span class="hljs-literal">false</span>;<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>    &#125;<br>&#125;<span class="hljs-operator">*/</span><br><span class="hljs-operator">/*</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-keyword">javatext</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[] args) &#123;<br>        int[] arr<span class="hljs-operator">=</span>&#123;<span class="hljs-number">19</span>,<span class="hljs-number">28</span>,<span class="hljs-number">37</span>,<span class="hljs-number">46</span>,<span class="hljs-number">50</span>&#125;;<br>         Scanner sc<span class="hljs-operator">=</span><span class="hljs-keyword">new</span> Scanner(System.<span class="hljs-keyword">in</span>);<br>         int number <span class="hljs-operator">=</span>sc.nextInt();<br>         int index<span class="hljs-operator">=-</span><span class="hljs-number">1</span>;<br>         <span class="hljs-keyword">for</span> (int x<span class="hljs-operator">=</span><span class="hljs-number">0</span>;x<span class="hljs-operator">&lt;</span>arr.length;x<span class="hljs-operator">++</span>)&#123;<br>             <span class="hljs-keyword">if</span>(arr[x]<span class="hljs-operator">==</span>number)&#123;<br>                 index<span class="hljs-operator">=</span>x;<br>                 break;<br>             &#125;<br>         &#125;<br>         System.out.println(index);<br>    &#125;<br>&#125;<span class="hljs-operator">*/</span><br><span class="hljs-operator">/*</span><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-keyword">javatext</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[] args) &#123;<br>        int[] arr<span class="hljs-operator">=</span>&#123;<span class="hljs-number">19</span>,<span class="hljs-number">28</span>,<span class="hljs-number">37</span>,<span class="hljs-number">46</span>,<span class="hljs-number">50</span>&#125;;<br>        <span class="hljs-keyword">for</span>(int start<span class="hljs-operator">=</span><span class="hljs-number">0</span>,<span class="hljs-keyword">end</span><span class="hljs-operator">=</span>arr.length<span class="hljs-number">-1</span>;start<span class="hljs-operator">&lt;=</span><span class="hljs-keyword">end</span>;start<span class="hljs-operator">++</span>,<span class="hljs-keyword">end</span><span class="hljs-operator">--</span>)&#123;<br>            int temp <span class="hljs-operator">=</span>arr[start];<br>            arr[start]<span class="hljs-operator">=</span>arr[<span class="hljs-keyword">end</span>];<br>            arr[<span class="hljs-keyword">end</span>]<span class="hljs-operator">=</span>temp;<br>        &#125;<br>        printArray(arr);<br><br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> printArray(int[] arr)&#123;<br>        <span class="hljs-keyword">for</span>(int x<span class="hljs-operator">=</span><span class="hljs-number">0</span>;x<span class="hljs-operator">&lt;</span>arr.length;x<span class="hljs-operator">++</span>)&#123;<br>            <span class="hljs-keyword">if</span>(x<span class="hljs-operator">==</span>arr.length<span class="hljs-number">-1</span>)&#123;<br>                System.out.println(arr[x]);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                System.out.println(arr[x]<span class="hljs-operator">+</span><span class="hljs-string">&quot;,&quot;</span>);<br>            &#125;<br><br>        &#125;<br><br>    &#125;<br>&#125;<span class="hljs-operator">*/</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-keyword">javatext</span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[] args) &#123;<br>        int[] arr<span class="hljs-operator">=</span><span class="hljs-keyword">new</span> int[<span class="hljs-number">6</span>];<br>        Scanner sc<span class="hljs-operator">=</span><span class="hljs-keyword">new</span> Scanner(System.<span class="hljs-keyword">in</span>);<br>        <span class="hljs-keyword">for</span>(int x<span class="hljs-operator">=</span><span class="hljs-number">0</span>;x<span class="hljs-operator">&lt;</span>arr.length;x<span class="hljs-operator">++</span>)&#123;<br>            System.out.println(<span class="hljs-string">&quot;请输入&quot;</span><span class="hljs-operator">+</span>(x<span class="hljs-operator">+</span><span class="hljs-number">1</span>)<span class="hljs-operator">+</span><span class="hljs-string">&quot;个评委的打分&quot;</span>);<br>            arr[x] <span class="hljs-operator">=</span>sc.nextInt();<br>        &#125;<br>        int max <span class="hljs-operator">=</span>getmax(arr);<br>        int min <span class="hljs-operator">=</span>getmin(arr);<br>        int sum <span class="hljs-operator">=</span>getsum(arr);<br>        int avg<span class="hljs-operator">=</span>(sum<span class="hljs-operator">-</span>max<span class="hljs-operator">-</span>min)<span class="hljs-operator">/</span>(arr.length<span class="hljs-number">-2</span>);<br>        System.out.println(avg);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> int getsum(int[] arr) &#123;<br>        int sum<span class="hljs-operator">=</span><span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(int x<span class="hljs-operator">=</span><span class="hljs-number">0</span>;x<span class="hljs-operator">&lt;</span>arr.length;x<span class="hljs-operator">++</span>)&#123;<br>            sum <span class="hljs-operator">+=</span>arr[x];<br>        &#125;<br>        <span class="hljs-keyword">return</span> sum;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> int getmin(int[] arr) &#123;<br>        int min <span class="hljs-operator">=</span> arr[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">for</span> (int x <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; x <span class="hljs-operator">&lt;</span> arr.length; x<span class="hljs-operator">++</span>) &#123;<br>            <span class="hljs-keyword">if</span> (arr[x] <span class="hljs-operator">&gt;</span> min) &#123;<br>                min <span class="hljs-operator">=</span> arr[x];<br>            &#125;<br><br>        &#125;<br>        <span class="hljs-keyword">return</span> min;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> int getmax(int[] arr) &#123;<br>        int max <span class="hljs-operator">=</span> arr[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">for</span> (int x <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; x <span class="hljs-operator">&lt;</span> arr.length; x<span class="hljs-operator">++</span>) &#123;<br>            <span class="hljs-keyword">if</span> (arr[x] <span class="hljs-operator">&gt;</span> max) &#123;<br>                max <span class="hljs-operator">=</span> arr[x];<br>            &#125;<br><br>        &#125;<br>        <span class="hljs-keyword">return</span> max;<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> printArray(int[] arr)&#123;<br>        <span class="hljs-keyword">for</span>(int x<span class="hljs-operator">=</span><span class="hljs-number">0</span>;x<span class="hljs-operator">&lt;</span>arr.length;x<span class="hljs-operator">++</span>)&#123;<br>            <span class="hljs-keyword">if</span>(x<span class="hljs-operator">==</span>arr.length<span class="hljs-number">-1</span>)&#123;<br>                System.out.println(arr[x]);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                System.out.println(arr[x]<span class="hljs-operator">+</span><span class="hljs-string">&quot;,&quot;</span>);<br>    &#125;<br>        &#125;<br>            &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><code class="hljs d">类:<br>是java程序基本单位<br>类由属性和行为组成<br>属性：在类中通过成员变量体现<br>行为：在类中通过成员方法来体现<br>定义步骤:<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> 类名&#123;<br>    <span class="hljs-comment">//成员变量</span><br>    变量<span class="hljs-number">1</span>的数据类型 变量<span class="hljs-number">1</span>;<br>    变量<span class="hljs-number">2</span>的数据类型 变量<span class="hljs-number">2</span>;<br>    .....<br>    <span class="hljs-comment">//成员方法</span><br>    方法<span class="hljs-number">1</span>;<br>    方法<span class="hljs-number">2</span>;<br>    ....<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> Phone&#123;<br>    <span class="hljs-comment">//成员变量</span><br>    String brand;<br>    <span class="hljs-keyword">int</span> price;<br>    <span class="hljs-comment">//成员方法</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> call()&#123;<br>        System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;打电话&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> sendMessage()&#123;<br>        System.<span class="hljs-keyword">out</span>.println(<span class="hljs-string">&quot;发短息&quot;</span>);<br>    &#125;<br>&#125;<br>对象的使用:<br>创建对象<br>类名 对象名 =<span class="hljs-keyword">new</span> 类名();<br>Phone p =<span class="hljs-keyword">new</span> Phone();<br>适用对象<br><span class="hljs-number">1</span>:使用成员变量<br>对象名.变量名<br>p.brand<br><span class="hljs-number">2.</span>使用成员方法<br>对象名.方法名()<br>p.call()<br>与上面定义步骤结合需要分两个文件夹<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> javatext&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[] args) &#123;<br>        <span class="hljs-comment">//创建对象</span><br>        Phone p=<span class="hljs-keyword">new</span> Phone();<br>        System.<span class="hljs-keyword">out</span>.println(p.brand);<br>        System.<span class="hljs-keyword">out</span>.println(p.price);<br>                p.brand=<span class="hljs-string">&quot;小米;</span><br><span class="hljs-string">                p.prace=2999;</span><br><span class="hljs-string">        System.out.println(p.brand);</span><br><span class="hljs-string">        System.out.println(p.price);</span><br><span class="hljs-string">        //使用成员方法</span><br><span class="hljs-string">        p.call();</span><br><span class="hljs-string">        p.sendMessage();</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">例子：</span><br><span class="hljs-string">Student类:</span><br><span class="hljs-string">public class Student &#123;</span><br><span class="hljs-string">    String name;</span><br><span class="hljs-string">    int age;</span><br><span class="hljs-string">    //成员方法</span><br><span class="hljs-string">    public void study()&#123;</span><br><span class="hljs-string">        System.out.println(&quot;</span>好好学习<span class="hljs-string">&quot;);</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">    public void doHomework()&#123;</span><br><span class="hljs-string">        System.out.println(&quot;</span>键盘敲烂<span class="hljs-string">&quot;);</span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">&#125;</span><br><span class="hljs-string">javatext类:</span><br><span class="hljs-string">public class javatext&#123;</span><br><span class="hljs-string">    public static void main(String[] args) &#123;</span><br><span class="hljs-string">        Student s =new Student();</span><br><span class="hljs-string">        System.out.println(s.name+&quot;</span>,<span class="hljs-string">&quot;+s.age);</span><br><span class="hljs-string">        s.name =&quot;</span>林青霞<span class="hljs-string">&quot;;</span><br><span class="hljs-string">        s.age =30;</span><br><span class="hljs-string">        System.out.println(s.name+s.age);</span><br><span class="hljs-string">        s.study();</span><br><span class="hljs-string">        s.doHomework();</span><br><span class="hljs-string"></span><br><span class="hljs-string">    &#125;</span><br><span class="hljs-string">&#125;</span><br></code></pre></td></tr></table></figure><p><img src="/source/img/62d5f4b25346db2c61cf69bc31665c4.png"></p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">成员变量和局部变量区别:<br>类中位置不同     成员变量在类中方法外，局部变量在方法内或方法声明上<br>内存中位置不同   成员变量在堆内存，局部变量在栈内存<br>生命周期不同<br>初始化不同<br>封装：<br><span class="hljs-keyword">private</span>关键字<br>是个权限修饰符<br>可以修饰成员<br>保护乘员不被别的类使用<br>针对<span class="hljs-keyword">private</span>修饰的成员变量<br>提供<span class="hljs-keyword">get</span>变量名()用<span class="hljs-keyword">public</span>修饰<br>提供<span class="hljs-keyword">set</span>变量名()用<span class="hljs-keyword">private</span>修饰<br></code></pre></td></tr></table></figure><p><img src="/source/img/7c89057d25ea93aeee98e8a6da48035.png"><br><img src="/source/img/e91e6cf2f1d50fff84b1c7523ad0ceb.png"></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Student</span> &#123;<br>   <span class="hljs-keyword">private</span> <span class="hljs-title class_">String</span> name;<br>   <span class="hljs-keyword">private</span>  int age;<br>   <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">steName</span>(<span class="hljs-params"><span class="hljs-built_in">String</span> n</span>)&#123;<br>       name =n;<br>   &#125;<br>   <span class="hljs-keyword">public</span> <span class="hljs-title class_">String</span> <span class="hljs-title function_">getName</span>(<span class="hljs-params"></span>)&#123;<br>       <span class="hljs-keyword">return</span> name;<br>   &#125;<br>   <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">steAge</span>(<span class="hljs-params">int a</span>)&#123;<br>       age =a;<br>   &#125;<br>   <span class="hljs-keyword">public</span> int <span class="hljs-title function_">getAge</span>(<span class="hljs-params"></span>)&#123;<br>       <span class="hljs-keyword">return</span> age;<br>   &#125;<br>   <span class="hljs-keyword">public</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">show</span>(<span class="hljs-params"></span>)&#123;<br>       <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(name+age);<br>   &#125;&#125;<br>+++++<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">javatext</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>) &#123;<br>        <span class="hljs-title class_">Student</span> s=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>();<br>        s.<span class="hljs-title function_">steName</span>(<span class="hljs-string">&quot;林青霞&quot;</span>);<br>        s.<span class="hljs-title function_">steAge</span>(<span class="hljs-number">30</span>);<br>        s.<span class="hljs-title function_">show</span>();<br>        <span class="hljs-comment">//使用get方式获取成员变量的值</span><br>        <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(s.<span class="hljs-title function_">getName</span>()+<span class="hljs-string">&quot;---&quot;</span>+s.<span class="hljs-title function_">getAge</span>());<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JAVA4</title>
    <link href="/2022/06/27/JAVA4/"/>
    <url>/2022/06/27/JAVA4/</url>
    
    <content type="html"><![CDATA[<h3 id="循环，数组，方法"><a href="#循环，数组，方法" class="headerlink" title="循环，数组，方法"></a>循环，数组，方法</h3><span id="more"></span><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs gradle"><span class="hljs-keyword">while</span>循环语句:<br>初始化语句;<br><span class="hljs-keyword">while</span>(条件判断语句)&#123;<br>    循环体语句;<br>    条件控制语句;<br>&#125;<br>例子：<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> ScannerDemo&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[] args)&#123;<br>            <span class="hljs-keyword">int</span> <span class="hljs-keyword">count</span> =<span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">double</span> paper =<span class="hljs-number">0.1</span>;<br>            <span class="hljs-keyword">int</span> zf =<span class="hljs-number">8844430</span>;<br>            <span class="hljs-keyword">while</span>(paper&lt;=zf)&#123;<br>                paper*<span class="hljs-number">2</span>=;<br>                <span class="hljs-keyword">count</span>++;<br>            &#125;<br>            System.out.<span class="hljs-keyword">println</span>(<span class="hljs-keyword">count</span>+<span class="hljs-string">&quot;次&quot;</span>);<br>        &#125;<br>数组:<br><span class="hljs-number">1</span>数据类型[]变量名<br><span class="hljs-keyword">int</span>[]arr<br><span class="hljs-number">2</span>数据类型 变量名[]<br><span class="hljs-keyword">int</span> arr[]<br>数组初始化动态初始化:<br>数据类型[]变量名 =<span class="hljs-keyword">new</span> 数据类型[数组长度]<br><span class="hljs-keyword">int</span> []arr =<span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">3</span>]<br><span class="hljs-comment">/*</span><br><span class="hljs-comment">左边：</span><br><span class="hljs-comment">int：；说明数组中的元素类型是int</span><br><span class="hljs-comment">[]:说明这是一个数组</span><br><span class="hljs-comment">arr:数组的名称</span><br><span class="hljs-comment">右边:</span><br><span class="hljs-comment">new:为数组申请内存空间</span><br><span class="hljs-comment">int：；说明数组中的元素类型是int</span><br><span class="hljs-comment">[]:说明这是一个数组</span><br><span class="hljs-comment">3:数组长度，数组元素个数</span><br><span class="hljs-comment">*/</span><br>数组名[索引]<br><span class="hljs-number">1</span>.索引从<span class="hljs-number">0</span>开始<br><span class="hljs-number">2</span>.索引是连续的<br><span class="hljs-number">3</span>.索引逐一增加，每次加<span class="hljs-number">1</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> ScannerDemo&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[] args)&#123;<br>            <span class="hljs-keyword">int</span> []arr =<span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">3</span>]<br>            System.out.<span class="hljs-keyword">println</span>(<span class="hljs-string">&quot;arr&quot;</span>);   <span class="hljs-comment">//[I@880ec60</span><br>            System.out.<span class="hljs-keyword">println</span>(<span class="hljs-string">&quot;arr[0]&quot;</span>);  <span class="hljs-comment">//0</span><br>            System.out.<span class="hljs-keyword">println</span>(<span class="hljs-string">&quot;arr[1]&quot;</span>);  <span class="hljs-comment">//0</span><br>            System.out.<span class="hljs-keyword">println</span>(<span class="hljs-string">&quot;arr[2]&quot;</span>);  <span class="hljs-comment">//0</span><br>        &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><img src="/source/img/jietu1.png"></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs csharp"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title">ScannerDemo</span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span>(<span class="hljs-params">String[] args</span>)</span>&#123;<br>              <span class="hljs-built_in">int</span>[] arr=<span class="hljs-keyword">new</span> <span class="hljs-built_in">int</span>[<span class="hljs-number">3</span>];<br>              System.<span class="hljs-keyword">out</span>.println(arr);     <span class="hljs-comment">//001</span><br>              System.<span class="hljs-keyword">out</span>.println(arr[<span class="hljs-number">0</span>]);  <span class="hljs-comment">//0</span><br>              System.<span class="hljs-keyword">out</span>.println(arr[<span class="hljs-number">1</span>]);  <span class="hljs-comment">//0</span><br>              System.<span class="hljs-keyword">out</span>.println(arr[<span class="hljs-number">2</span>]);  <span class="hljs-comment">//0</span><br><br>              arr[<span class="hljs-number">0</span>] = <span class="hljs-number">100</span>;<br>              arr[<span class="hljs-number">2</span>] = <span class="hljs-number">200</span>;<br>              System.<span class="hljs-keyword">out</span>.println(arr);     <span class="hljs-comment">//001</span><br>              System.<span class="hljs-keyword">out</span>.println(arr[<span class="hljs-number">0</span>]);  <span class="hljs-comment">//100</span><br>              System.<span class="hljs-keyword">out</span>.println(arr[<span class="hljs-number">1</span>]);  <span class="hljs-comment">//0</span><br>              System.<span class="hljs-keyword">out</span>.println(arr[<span class="hljs-number">2</span>]);  <span class="hljs-comment">//200</span><br>        &#125;<br>            &#125;<br></code></pre></td></tr></table></figure><p><img src="/source/img/66f253bbdb2a45b7e6560894c23f6f0.png"></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs typescript">数组初始化静态初始化：<br><span class="hljs-number">1.</span>数据类型[]变量名 =<span class="hljs-keyword">new</span> 数据类型[]&#123;数据<span class="hljs-number">1</span>，数据<span class="hljs-number">2</span>，数据<span class="hljs-number">3</span>,.....&#125;;<br>int [] arr =<span class="hljs-keyword">new</span> []&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;<br><span class="hljs-number">2.</span>数据类型[]变量名=&#123;数据<span class="hljs-number">1</span>，数据<span class="hljs-number">2</span>，数据<span class="hljs-number">3</span>,....&#125;]<br>int [] arr =&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>                  int[]arr=&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;;<br>                  <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(arr);               <span class="hljs-comment">//地址值</span><br>                    <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(arr[<span class="hljs-number">0</span>]);          <span class="hljs-comment">//1</span><br>                    <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(arr[<span class="hljs-number">1</span>]);          <span class="hljs-comment">//2</span><br>                    <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(arr[<span class="hljs-number">2</span>]);         <span class="hljs-comment">//3</span><br>             &#125;<br>        &#125;<br>遍历: <br>arr.<span class="hljs-property">length</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>                    int[] arr=&#123;<span class="hljs-number">11</span>,<span class="hljs-number">22</span>,<span class="hljs-number">33</span>,<span class="hljs-number">44</span>,<span class="hljs-number">55</span>&#125;;<br>                    <span class="hljs-keyword">for</span>(int x=<span class="hljs-number">0</span>,x&lt;arr.<span class="hljs-property">length</span>;x++)&#123;<br>                        <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(x);<br>                    &#125;<br>               &#125; <br>        &#125;<br>获取最值:<br>  <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>            int[ ] arr=&#123;<span class="hljs-number">12</span>,<span class="hljs-number">45</span>,<span class="hljs-number">98</span>,<span class="hljs-number">73</span>,<span class="hljs-number">60</span>&#125;;<br>            int max=arr[<span class="hljs-number">0</span>];<br>            <span class="hljs-keyword">for</span>(int x=<span class="hljs-number">1</span>,x&lt;arr.<span class="hljs-property">length</span>;x++)&#123;<br>                <span class="hljs-keyword">if</span>(arr[x]&gt;max)&#123;<br>                    max =arr[x];<br>                &#125;<br>            &#125;<br><br>           <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(x);<br>        &#125;<br>        &#125;<br>方法定义与调用<br>方法名();<br><span class="hljs-title function_">isEvenNumber</span>();<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>            <span class="hljs-comment">//调用方法</span><br>            <span class="hljs-title function_">isEvenNumber</span>();<br>            &#125;<br>            <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">isEvenNumber</span>(<span class="hljs-params"></span>)&#123;<br>                <span class="hljs-comment">//定义变量</span><br>                int <span class="hljs-built_in">number</span> =<span class="hljs-number">10</span>;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-built_in">number</span>%<span class="hljs-number">2</span> ==<span class="hljs-number">0</span>)&#123;<br>                    <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-literal">true</span>);<br>                &#125;<span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-literal">false</span>);<br>                &#125;<br>            &#125;<br>        &#125;<br>例子:设计一个算法打印两个数中较大数<br>ublic <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>            <span class="hljs-title function_">getmax</span>();<br><br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">getmax</span>(<span class="hljs-params"></span>)&#123;<br>            int a=<span class="hljs-number">10</span>;<br>            int b=<span class="hljs-number">20</span>;<br>            <span class="hljs-keyword">if</span>(a&gt;b)&#123;<br>                <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(a);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(b);<br>            &#125;<br><br>        &#125;<br>        &#125;<br>带参数方法定义:<br>pbulic <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> 方法名(参数)&#123;......&#125;<br>pbulic <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> 方法名  （数据类型变量名)&#123;......&#125;<br>pbulic <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> 方法名(数据类型变量名<span class="hljs-number">1</span>，数据类型变量名<span class="hljs-number">2</span>,...)&#123;...&#125;<br>带参数方法调用格式:<br>方法名(参数);<br>方法名(变量名/常量值);<br>方法名(变量名<span class="hljs-number">1</span>/常量<span class="hljs-number">1</span>,变量名<span class="hljs-number">2</span>/常量<span class="hljs-number">2</span>)<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>            <span class="hljs-comment">//常量值调用方法</span><br>            <span class="hljs-title function_">isEvenNumber</span>(<span class="hljs-number">10</span>);      <span class="hljs-comment">//10传递给number</span><br>            <span class="hljs-comment">//变量的调用方式</span><br>            int <span class="hljs-built_in">number</span>=<span class="hljs-number">10</span>;<br>              <span class="hljs-title function_">isEvenNumber</span>(<span class="hljs-built_in">number</span>); <br>            &#125;<br>            <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">isEvenNumber</span>(<span class="hljs-params">int <span class="hljs-built_in">number</span></span>)&#123;<br>                <span class="hljs-keyword">if</span>(<span class="hljs-built_in">number</span>%<span class="hljs-number">2</span> ==<span class="hljs-number">0</span>)&#123;<br>                    <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-literal">true</span>);<br>                &#125;<span class="hljs-keyword">else</span>&#123;<br>                    <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-literal">false</span>);<br>                &#125;<br>            &#125;<br>        &#125;<br>形参和实参:<br></code></pre></td></tr></table></figure><p><img src="/source/img/bfbd488e51c75bfaea010c913375318.png"></p><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><code class="hljs typescript">例子：设计一个方法打印两个数中较大数，数据来自方法参数<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>               <span class="hljs-comment">//常参数</span><br>            <span class="hljs-title function_">getmax</span>(<span class="hljs-attr">a</span>:<span class="hljs-number">10</span>,<span class="hljs-attr">b</span>:<span class="hljs-number">20</span>);<br>              <span class="hljs-comment">//变参数</span><br>            int a=<span class="hljs-number">10</span>;<br>            int b=<span class="hljs-number">20</span>;<br>            <span class="hljs-title function_">getmax</span>(a,b);<br><br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">getmax</span>(<span class="hljs-params">int a,int b</span>)&#123;<br>            <span class="hljs-keyword">if</span>(a&gt;b)&#123;<br>                <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(a);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(b);<br>            &#125;<br>        &#125;<br>        &#125;<br>带返回值定于调用：<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> 数据类型   方法名(参数)&#123;<br>    <span class="hljs-keyword">return</span>数据;<br>&#125;<br>方法名(参数);<br><span class="hljs-title function_">isEvenNumber</span>(<span class="hljs-number">5</span>);<br>数据类型 变量名 =方法名(参数);<br><span class="hljs-built_in">boolean</span> flag =<span class="hljs-title function_">isEvenNumber</span>(<span class="hljs-number">5</span>);<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>                    <span class="hljs-comment">//1方法名(参数)</span><br>                    <span class="hljs-title function_">isEvenNumber</span>(<span class="hljs-number">10</span>);<br>                    <span class="hljs-comment">//2数据类型 变量名 =方法名(参数);</span><br>                    <span class="hljs-built_in">boolean</span> flag =<span class="hljs-title function_">isEvneNumber</span>(<span class="hljs-number">10</span>);<br>                    <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(flag);<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">boolean</span> <span class="hljs-title function_">isEvenNumber</span>(<span class="hljs-params">int <span class="hljs-built_in">number</span></span>)&#123;<br>            <span class="hljs-keyword">if</span>(<span class="hljs-built_in">number</span>%<span class="hljs-number">2</span> ==<span class="hljs-number">0</span>)&#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>            &#125;<br>        &#125;<br>        &#125;<br>例子：设计一个方法获取最大值，两个数来自参数<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>                  int result=<span class="hljs-title function_">getmax</span>(<span class="hljs-attr">a</span>:<span class="hljs-number">10</span>,<span class="hljs-attr">b</span>:<span class="hljs-number">20</span>);<br>                  <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(result);<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> int <span class="hljs-title function_">getmax</span>(<span class="hljs-params">int a,int b</span>)&#123;<br>            <span class="hljs-keyword">if</span>(a&gt;b)&#123;<br>                <span class="hljs-keyword">return</span> a;<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">return</span> b;<br>            &#125;<br>        &#125;<br>        &#125;<br>方法的通用格式:<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> 返回值类型 方法名(参数)&#123;<br>    方法体;<br>    <span class="hljs-keyword">return</span>数据;<br>&#125;<br><span class="hljs-built_in">void</span>类型,直接调用<br>非<span class="hljs-built_in">void</span>类型，推荐用变量<br>方法重载：<br>需要在同一类<br>多个方法具有相同的方法名<br>多个方法参数不同，类型不同或者数量不同<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>                  int result=<span class="hljs-title function_">sum</span>(<span class="hljs-attr">a</span>:<span class="hljs-number">10</span>,<span class="hljs-attr">b</span>:<span class="hljs-number">20</span>);<br>                  <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(result);         <span class="hljs-comment">//30</span><br>                  double result2 =<span class="hljs-title function_">sum</span>(<span class="hljs-attr">a</span>:<span class="hljs-number">10.0</span>,<span class="hljs-attr">b</span>:<span class="hljs-number">20.0</span>);<br>                  <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(result2);      <span class="hljs-comment">//30.0</span><br>                  int result3=<span class="hljs-title function_">sum</span>(<span class="hljs-attr">a</span>:<span class="hljs-number">10</span>,<span class="hljs-attr">b</span>:<span class="hljs-number">20</span>,<span class="hljs-attr">c</span>:<span class="hljs-number">30</span>);<br>                  <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(result3);      <span class="hljs-comment">//60</span><br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> int <span class="hljs-title function_">sum</span>(<span class="hljs-params">int a, int b</span>)&#123;<br>            <span class="hljs-keyword">return</span> a+b;&#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> double <span class="hljs-title function_">sum</span>(<span class="hljs-params">double a,double b</span>)&#123;<br>            <span class="hljs-keyword">return</span> a+b;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span>  int <span class="hljs-title function_">sum</span>(<span class="hljs-params">int a,int b,int c</span>)&#123;<br>            <span class="hljs-keyword">return</span> a+b+c;<br>            <br>                    &#125;<br>        &#125;<br>练习：使用方法重载，设计比较两个整数是否相同(兼容全整数类型byte short  long int)<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>              <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-title function_">compare</span>(<span class="hljs-number">10</span>,<span class="hljs-number">20</span>));<br>               <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-title function_">compare</span>((byte)<span class="hljs-number">10</span>,(byte)<span class="hljs-number">20</span>);<br>                <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-title function_">compare</span>((short)<span class="hljs-number">10</span>,(short)<span class="hljs-number">20</span>));<br>                 <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-title function_">compare</span>(10L,20L));<br>               <br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">boolean</span> <span class="hljs-title function_">compare</span>(<span class="hljs-params">int a,int b</span>)&#123;<br>            <span class="hljs-keyword">return</span> a ==b;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">boolean</span> <span class="hljs-title function_">compare</span>(<span class="hljs-params">long a,long b</span>)&#123;<br>            <span class="hljs-keyword">return</span> a ==b;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">boolean</span> <span class="hljs-title function_">compare</span>(<span class="hljs-params">byte a,byte b</span>)&#123;<br>            <span class="hljs-keyword">return</span> a ==b;<br>        &#125;<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">boolean</span> <span class="hljs-title function_">compare</span>(<span class="hljs-params">short a,short b</span>)&#123;<br>            <span class="hljs-keyword">return</span> a ==b;<br>        &#125;<br>        &#125;<br>方法参数传递:<br>对于基本数据类型参数，形式参数改变不影响实际参数的值<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>            int num =<span class="hljs-number">100</span>；<br>            <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-built_in">number</span>);         <span class="hljs-comment">//100</span><br>            <span class="hljs-title function_">change</span>(<span class="hljs-built_in">number</span>);<br>              <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-built_in">number</span>);       <span class="hljs-comment">//100</span><br>        &#125;<br>                <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">change</span>(<span class="hljs-params">int <span class="hljs-built_in">number</span></span>)&#123;<br>                    <span class="hljs-built_in">number</span> =<span class="hljs-number">200</span>;<br>                &#125;<br><br>        &#125;<br>        对于引用类型的参数，形式参数改变影响实际参数改变<br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>            int[] arr=&#123;<span class="hljs-number">10</span>,<span class="hljs-number">20</span>,<span class="hljs-number">30</span>&#125;;<br>            <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(arr[<span class="hljs-number">1</span>]);         <span class="hljs-comment">//20</span><br>            <span class="hljs-title function_">change</span>(<span class="hljs-built_in">number</span>);<br>              <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(arr[<span class="hljs-number">1</span>]);       <span class="hljs-comment">//200</span><br>        &#125;<br>                <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">change</span>(<span class="hljs-params">int[] arr</span>)&#123;<br>                    arr[<span class="hljs-number">1</span>] =<span class="hljs-number">200</span>;<br>                &#125;<br>        &#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JAVA3</title>
    <link href="/2022/06/26/JAVA3/"/>
    <url>/2022/06/26/JAVA3/</url>
    
    <content type="html"><![CDATA[<h3 id="case穿透，循环"><a href="#case穿透，循环" class="headerlink" title="case穿透，循环"></a>case穿透，循环</h3><span id="more"></span><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><code class="hljs arduino">Switch语句:<br><span class="hljs-keyword">switch</span>(表达式)&#123;<br>    <span class="hljs-keyword">case</span>值<span class="hljs-number">1</span>:<br>           语句体<span class="hljs-number">1</span>;<br>           <span class="hljs-keyword">break</span>;<br>      <span class="hljs-keyword">case</span>值<span class="hljs-number">2</span>:<br>           语句体<span class="hljs-number">2</span>;<br>           <span class="hljs-keyword">break</span>;  <br>       <span class="hljs-keyword">case</span>值<span class="hljs-number">3</span>:<br>           语句体<span class="hljs-number">3</span>;<br>           <span class="hljs-keyword">break</span>;   <br>    .....<br>    <span class="hljs-keyword">default</span>:<br>            语句体n+!<br>            [breakl]      <br>&#125;<br>例子：<br><span class="hljs-keyword">import</span> java.util.Scanner;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">String</span>[] args)</span></span>&#123;<br>Scanner sc=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> month=sc.<span class="hljs-built_in">nexeInt</span>();<br>        <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>        System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;第一&quot;</span>)<br>        <span class="hljs-keyword">break</span>;<br>         <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>        System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;第二&quot;</span>)<br>        <span class="hljs-keyword">break</span>;<br>         case3:<br>        System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;第三&quot;</span>)<br>        <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>:<br>        Systgem.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;输入有误&quot;</span>)<br><br>            &#125;<br>        &#125;<br><span class="hljs-keyword">case</span>穿透：<br><span class="hljs-keyword">import</span> java.util.Scanner;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">String</span>[] args)</span></span>&#123;<br>Scanner sc=<span class="hljs-keyword">new</span> <span class="hljs-built_in">Scanner</span>(System.in);<br>        <span class="hljs-type">int</span> month=sc.<span class="hljs-built_in">nexeInt</span>();<br>         <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>         <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>         <span class="hljs-keyword">case</span> <span class="hljs-number">12</span>:<br>        System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;冬季&quot;</span>)<br>              <span class="hljs-keyword">break</span>;<br>         <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>         <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:<br>         <span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:<br>        System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;春季&quot;</span>)<br>              <span class="hljs-keyword">break</span>;<br>         <span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:<br>         <span class="hljs-keyword">case</span> <span class="hljs-number">7</span>:<br>         <span class="hljs-keyword">case</span> <span class="hljs-number">8</span>:<br>        System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;夏季&quot;</span>)<br>              <span class="hljs-keyword">break</span>;<br>         <span class="hljs-keyword">case</span> <span class="hljs-number">9</span>:<br>         <span class="hljs-keyword">case</span> <span class="hljs-number">10</span>:<br>         <span class="hljs-keyword">case</span> <span class="hljs-number">11</span><br>        System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;秋季&quot;</span>)<br>               <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">default</span>:<br>        Systgem.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;输入有误&quot;</span>)<br>        &#125;<br>             &#125;<br>循环语句:<br><span class="hljs-keyword">for</span>循环<br><span class="hljs-keyword">for</span>(初始化语句,条件判断语句,条件控制语句)&#123;<br>    循环体语句;<br>&#125;<br><span class="hljs-number">1</span>执行初始化语句<br><span class="hljs-number">2</span>执行条件判断语句,看其结果ture还是<span class="hljs-literal">false</span>如果false3结束，如果<span class="hljs-literal">true</span>继续执行<br><span class="hljs-number">3</span>执行循环体语句<br><span class="hljs-number">4</span>执行条件控制语句<br><span class="hljs-number">5</span>回<span class="hljs-number">2</span>继续<br>    输出<span class="hljs-number">5</span>次Helloworld:<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">String</span>[] args)</span></span>&#123;<br>              <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">5</span>;i++)&#125;<br>              System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;Hrlloworld&quot;</span>);<br>        &#125;<br>例子：  输出<span class="hljs-number">1</span><span class="hljs-number">-5</span>和<span class="hljs-number">5</span><span class="hljs-number">-1</span>的数据<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">String</span>[] args)</span></span>&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">5</span>;i++)&#123;<br>                System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;i&quot;</span>);<br>            &#125;<br>             <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">5</span>;i&gt;=<span class="hljs-number">1</span>;i--)&#123;<br>                System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;i&quot;</span>);<br>            &#125;<br>        &#125;<br>例子:    求<span class="hljs-number">1</span><span class="hljs-number">-5</span>之间的数据和，并求和结果输出<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">String</span>[] args)</span></span>&#123;<br>            <span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">5</span>;i++)&#123;<br>              sum+=i;<br>            &#125;<br>            System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;sum&quot;</span>);<br>        &#125;<br>例子:    求偶数和<span class="hljs-number">1</span><span class="hljs-number">-100</span>的偶数和，并输出<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">String</span>[] args)</span></span>&#123;<br>            <span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">100</span>;i++)&#123;<br>            <span class="hljs-keyword">if</span>(i%<span class="hljs-number">2</span>==<span class="hljs-number">0</span>)&#123;<br>                    sum+=i;<br>            &#125;<br>             <br>                &#125;<br>                    System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;sum&quot;</span>);<br>        &#125; <br>&#125;<br>例子:  控制台输出所有的水仙花数<br><span class="hljs-number">1</span>：水仙花数是一个三位数<br><span class="hljs-number">2</span>：水仙花数的个位、十百位数字立方和等于原数<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">String</span>[] args)</span></span>&#123;<br>            <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i =<span class="hljs-number">100</span>;i&lt;=<span class="hljs-number">999</span>;i++)&#123;<br>                <span class="hljs-type">int</span> ge=i%<span class="hljs-number">1</span>-;<br>                <span class="hljs-type">int</span> shi=i/<span class="hljs-number">10</span>%<span class="hljs-number">10</span>;<br>                <span class="hljs-type">int</span> bai=i/<span class="hljs-number">10</span>/<span class="hljs-number">10</span>%<span class="hljs-number">10</span>;<br>                <span class="hljs-keyword">if</span>(ge*ge*ge+shi*shi*shi+bai*bai*bai == i)&#123;<br>                    System.out.<span class="hljs-built_in">println</span>(i);<br>                &#125;<br>            &#125;<br>        &#125;<br><span class="hljs-keyword">while</span>循环语句:<br>初始化语句;<br><span class="hljs-keyword">while</span>(条件判断语句)&#123;<br>    循环体语句;<br>    条件控制语句;<br>&#125;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-type">static</span> <span class="hljs-type">void</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">String</span>[] args)</span></span>&#123;<br>            <span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;<br>            <span class="hljs-keyword">while</span>(i&lt;=<span class="hljs-number">5</span>)&#123;<br>                System.out.<span class="hljs-built_in">println</span>(<span class="hljs-string">&quot;Helloworld&quot;</span>);<br>                i++;<br>            &#125;<br>        &#125;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JAVA2</title>
    <link href="/2022/06/25/JAVA2/"/>
    <url>/2022/06/25/JAVA2/</url>
    
    <content type="html"><![CDATA[<h3 id="分支语句，运算符，数据接收"><a href="#分支语句，运算符，数据接收" class="headerlink" title="分支语句，运算符，数据接收"></a>分支语句，运算符，数据接收</h3><span id="more"></span><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><code class="hljs typescript">整数相除只能得到整数，要想得到小数，必须有浮点数参与,“%”取余<br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-number">6</span>/<span class="hljs-number">4</span>)  <span class="hljs-comment">//结果为1</span><br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-number">6.0</span>/<span class="hljs-number">4</span>)  <span class="hljs-comment">//结果为1.5</span><br><span class="hljs-string">&#x27;A&#x27;</span><span class="hljs-number">65</span>,<span class="hljs-string">&#x27;a&#x27;</span><span class="hljs-number">97</span>,<span class="hljs-string">&#x27;0&#x27;</span><span class="hljs-number">48</span><br>等级提升：<br>byte,short,char-&gt;int-&gt;long-&gt;float-&gt;double<br>例：int j=<span class="hljs-number">10</span>+<span class="hljs-number">10.2</span>  <span class="hljs-comment">//前方int需要时double类型</span><br>字符串+操作是拼接<br>例：<span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;王二&quot;</span>+<span class="hljs-number">66</span>)-&gt;王二<span class="hljs-number">66</span><br>    <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;王二&quot;</span>+<span class="hljs-number">6</span>+<span class="hljs-number">6</span>)-&gt;王二<span class="hljs-number">66</span><br>    <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-number">6</span>+<span class="hljs-number">6</span>+<span class="hljs-string">&quot;王二&quot;</span>)-&gt;<span class="hljs-number">12</span>王二  <span class="hljs-comment">//前两个加后拼接</span><br>赋值运算符：<br>int i=<span class="hljs-number">10</span>    <span class="hljs-comment">//把10赋值给int类型的变量i</span><br>i +=<span class="hljs-number">20</span>;     <span class="hljs-comment">//与i+20;等价</span><br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;i&quot;</span>+i)   <span class="hljs-comment">//i=30，+=把左边和右边的数据做加法操作，结果赋值给左边</span><br>short s =<span class="hljs-number">10</span>;<br>s +=<span class="hljs-number">20</span>;      <span class="hljs-comment">//与s+(short)(s+20);等价，不与s = s+20等价</span><br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;s&quot;</span>+s)   <span class="hljs-comment">//结果为s30</span><br>a+=b  <span class="hljs-comment">//将a+b的值给a</span><br>a-=b  <span class="hljs-comment">//将a-b的值给a</span><br>a*=b  <span class="hljs-comment">//将a×b的值给a</span><br>a/=b  <span class="hljs-comment">//将a÷b的值给a</span><br>a%=b  <span class="hljs-comment">//将a÷b的余数给a</span><br>单独使用时i++和++i一样<br>int i=<span class="hljs-number">10</span><br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;i&quot;</span>+i);  <span class="hljs-comment">//结果为i10</span><br>i++;    <br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;i&quot;</span>+i);   <span class="hljs-comment">//结果为i11</span><br>参与操作时：++i和i++不同<br>int i=<span class="hljs-number">10</span>;<br>int j=i++;<br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;j&quot;</span>)  <span class="hljs-comment">//j=10</span><br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;i&quot;</span>)  <span class="hljs-comment">//i=11</span><br><br>int i=<span class="hljs-number">10</span>;<br>int j=++i;<br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;j&quot;</span>)  <span class="hljs-comment">//j=11</span><br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;i&quot;</span>)  <span class="hljs-comment">//i=11</span><br><br>&amp;或运算符，有<span class="hljs-literal">false</span>则<span class="hljs-literal">false</span><br>|或运算符,有<span class="hljs-literal">true</span>则<span class="hljs-literal">true</span><br>^亦或运算符,同为<span class="hljs-literal">false</span>不同ture<br>!非运算符,非<span class="hljs-literal">false</span>则<span class="hljs-literal">true</span>，非<span class="hljs-literal">true</span>则<span class="hljs-literal">false</span>，!可以叠加<br>&amp;&amp;短路与，如果左边真，右边执行，左边为假，右边不执行<br>||短路或，如果左边假，右边执行，左边为真，右边不执行<br><br>三元运算符:<br>格式关系表达式?表达式<span class="hljs-number">1</span>:表达式<span class="hljs-number">2</span><br>如果<span class="hljs-literal">true</span>，表达式<span class="hljs-number">1</span>为运算结果<br>如果flase，表达式<span class="hljs-number">2</span>为运算结果<br>int a=<span class="hljs-number">10</span>;<br>int b=<span class="hljs-number">20</span>;<br>int max=a&gt;b?<span class="hljs-attr">a</span>:b;   <span class="hljs-comment">//获取两个数据中较大值</span><br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;max:&quot;</span>+max);   <span class="hljs-comment">//结果为max:20</span><br><br>接收数据：<br><span class="hljs-keyword">import</span> java.<span class="hljs-property">util</span>.<span class="hljs-property">Scanner</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br><span class="hljs-title class_">Scanner</span> sc=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(<span class="hljs-title class_">System</span>.<span class="hljs-property">in</span>);       <span class="hljs-comment">//创建数据</span><br>int x =sc.<span class="hljs-title function_">nextInt</span>();       <span class="hljs-comment">//接收数据</span><br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;x&quot;</span> + x);  <span class="hljs-comment">//输出数据</span><br>&#125;<br>&#125;<br><br>分支语句：<br>顺序结构<br>分支结构(<span class="hljs-keyword">if</span>,<span class="hljs-keyword">switch</span>)<br>循环结构(<span class="hljs-keyword">for</span>,<span class="hljs-keyword">while</span>,<span class="hljs-keyword">do</span>...<span class="hljs-keyword">while</span>.)<br><br><span class="hljs-keyword">if</span>语句<span class="hljs-number">1</span>:<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>            int a=<span class="hljs-number">10</span>;<br>            int b=<span class="hljs-number">20</span>;<br>            <span class="hljs-keyword">if</span>(a==b)&#123;<br>                <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;a等于b&quot;</span>)<br>            &#125;<br>             <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;结束&quot;</span>)         <span class="hljs-comment">//结果为结束，因为a！b所以不执行if语句里面</span><br>             &#125;<br>        &#125;<br><span class="hljs-keyword">if</span>语句<span class="hljs-number">2</span>：<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br>            int a=<span class="hljs-number">20</span>;<br>            int b=<span class="hljs-number">10</span>;<br>            <span class="hljs-keyword">if</span>(a&gt;b)&#123;<br>                 <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;a&gt;b&quot;</span>)；<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                 <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;a!b&quot;</span>)；<br>            &#125;<br>            <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;结束&quot;</span>)；<br>        &#125;<br><br>例子：随机输入一个数使用<span class="hljs-keyword">if</span>判断基偶数<br><span class="hljs-keyword">import</span> java.<span class="hljs-property">util</span>.<span class="hljs-property">Scanner</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br><span class="hljs-title class_">Scanner</span> sc=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(<span class="hljs-title class_">System</span>.<span class="hljs-property">in</span>);<br>int <span class="hljs-built_in">number</span>=sc.<span class="hljs-title function_">nextInt</span>();<br>        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">number</span>%<span class="hljs-number">2</span> ==<span class="hljs-number">0</span>)&#123;<br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-built_in">number</span>+<span class="hljs-string">&quot;是偶数&quot;</span>);<br>&#125;<span class="hljs-keyword">else</span>&#123;<br><span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-built_in">number</span>+<span class="hljs-string">&quot;是基数&quot;</span>);<br>&#125;<br><br>&#125;<br><br><span class="hljs-keyword">if</span>语句<span class="hljs-number">3</span>:<br><span class="hljs-keyword">import</span> java.<span class="hljs-property">util</span>.<span class="hljs-property">Scanner</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br><span class="hljs-title class_">Scanner</span> sc=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(<span class="hljs-title class_">System</span>.<span class="hljs-property">in</span>);<br>int week=sc.<span class="hljs-title function_">nextInt</span>();<br><span class="hljs-keyword">if</span>(week ==<span class="hljs-number">1</span>)&#123;<br>            <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;星期一&quot;</span>);<br>        &#125;<span class="hljs-title function_">elseif</span>(<span class="hljs-params">week=<span class="hljs-number">2</span></span>)&#123;<br>             <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;星期二&quot;</span>);<br>        &#125;<span class="hljs-title function_">elseif</span>(<span class="hljs-params">week=<span class="hljs-number">3</span></span>)&#123;<br>             <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;星期三&quot;</span>);<br>        &#125;<span class="hljs-title function_">elseif</span>(<span class="hljs-params">week=<span class="hljs-number">4</span></span>)&#123;<br>             <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;星期四&quot;</span>);<br>        &#125;<span class="hljs-title function_">elseif</span>(<span class="hljs-params">week=<span class="hljs-number">5</span></span>)&#123;<br>             <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;星期五&quot;</span>);<br>        &#125;<span class="hljs-title function_">elseif</span>(<span class="hljs-params">week=<span class="hljs-number">6</span></span>)&#123;<br>             <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;星期六&quot;</span>);<br>        &#125;<span class="hljs-title function_">else</span>(<span class="hljs-params">week=<span class="hljs-number">7</span></span>)&#123;<br>             <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;星期日&quot;</span>);<br>        &#125;<br>        <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(“结束);<br>&#125;<br><br>例子：根据不同分数获得不同奖励<br><span class="hljs-keyword">import</span> java.<span class="hljs-property">util</span>.<span class="hljs-property">Scanner</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ScannerDemo</span>&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-built_in">void</span> <span class="hljs-title function_">main</span>(<span class="hljs-params"><span class="hljs-built_in">String</span>[] args</span>)&#123;<br><span class="hljs-title class_">Scanner</span> sc=<span class="hljs-keyword">new</span> <span class="hljs-title class_">Scanner</span>(<span class="hljs-title class_">System</span>.<span class="hljs-property">in</span>);<br>int score=sc.<span class="hljs-title function_">nextInt</span>();<br>        <span class="hljs-keyword">if</span>(score&gt;<span class="hljs-number">100</span>)&#123;<br>            <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;数据有误&quot;</span>);<br>        &#125;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(score &gt;=<span class="hljs-number">95</span>&amp;&amp;&lt;=<span class="hljs-number">100</span>&gt;)&#123;<br>            <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;山地自行车&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(score&gt;=<span class="hljs-number">90</span>&amp;&amp;&lt;=<span class="hljs-number">94</span>&gt;)&#123;<br>             <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;游乐场游玩&quot;</span>);<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(score&gt;=<span class="hljs-number">80</span>$$&lt;=<span class="hljs-number">89</span>&gt;)&#123;<br>             <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;变形金刚&quot;</span>);<br>        &#125;<span class="hljs-title function_">else</span>(<span class="hljs-params">score&lt;<span class="hljs-number">80</span>&gt;</span>)&#123;<br>             <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(<span class="hljs-string">&quot;揍一顿&quot;</span>);<br>        &#125;<br>        <span class="hljs-title class_">System</span>.<span class="hljs-property">out</span>.<span class="hljs-title function_">println</span>(“结束);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>JAVA1</title>
    <link href="/2022/06/24/JAVA1/"/>
    <url>/2022/06/24/JAVA1/</url>
    
    <content type="html"><![CDATA[<h3 id="入门知识"><a href="#入门知识" class="headerlink" title="入门知识"></a>入门知识</h3><span id="more"></span><p>CMD命令：<br> <figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs gradle">进入盘符  盘符: <br>   回退一级 cd..   <br>   回退根目录 cd\<br>    清屏cls  <br>   关闭窗口 exit  <br>   进入目录 cd目录<span class="hljs-number">1</span>\目录<span class="hljs-number">2</span>\....  <br><br> <span class="hljs-number">1</span>.记事本编辑<br> <span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> HelloWorld&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[]args)&#123;<br>System.out.<span class="hljs-keyword">println</span>(<span class="hljs-string">&quot;Hello world&quot;</span>);<br>&#125;<br><br>&#125;<br><br><span class="hljs-number">2</span>.进入记事本目录cd\<br><br><span class="hljs-number">3</span>.javac 文件名.java   编译<br><br><span class="hljs-number">4</span>.java 类名    执行<br><br>关键字全部小写<br><br>空常量不能直接输出 <br><br>数据类型包括<br><span class="hljs-number">1</span>基本数据类型&#123;数值型包括 &#123;整数(<span class="hljs-keyword">byte</span> <span class="hljs-number">1</span>,<span class="hljs-keyword">short</span> <span class="hljs-number">2</span>,<span class="hljs-keyword">int</span> <span class="hljs-number">4</span>默认,<span class="hljs-keyword">long</span> <span class="hljs-number">8</span>)浮点型(<span class="hljs-keyword">float</span> <span class="hljs-number">4</span>,<span class="hljs-keyword">double</span> <span class="hljs-number">8</span>默认)字符(<span class="hljs-keyword">char</span> <span class="hljs-number">2</span>)&#125;非数值型包括&#123;布尔(<span class="hljs-keyword">boolean</span> <span class="hljs-number">1</span>)&#125;&#125;<br><span class="hljs-number">2</span>引用数据类型&#123;类(<span class="hljs-keyword">class</span>)，接口(<span class="hljs-keyword">interface</span>),数组([])&#125;<br><br><span class="hljs-keyword">float</span> f=<span class="hljs-number">3.14</span>F <span class="hljs-comment">//后要加F</span><br><span class="hljs-keyword">long</span> l=<span class="hljs-number">10000000000</span>L <span class="hljs-comment">//后要加L</span><br><br>标识符定义规则：<br>由数字、字母、下划线、美元符组成<br>不能以数字开头<br>不能是关键字<br>区分大小写<br><br>小驼峰辨别法(针对方法、变量)<br><span class="hljs-number">1</span>是一个单词时，首字母小写<br><span class="hljs-number">2</span>多个单词时，第一个单词小写后面都大写<br><br>大驼峰辨别法(针对类)<br><span class="hljs-number">1</span>一个单词时，首字母大写<br><span class="hljs-number">2</span>多个单词时，每个单词首字母大写<br><br>自动类型转换：<br><span class="hljs-number">1</span><span class="hljs-keyword">byte</span>&lt;<span class="hljs-keyword">short</span>&lt;<span class="hljs-keyword">int</span>&lt;<span class="hljs-keyword">long</span>&lt;<span class="hljs-keyword">float</span>&lt;<span class="hljs-keyword">double</span><br><span class="hljs-number">2</span><span class="hljs-keyword">char</span>&lt;<span class="hljs-keyword">int</span>&lt;<span class="hljs-keyword">long</span>&lt;<span class="hljs-keyword">float</span>&lt;<span class="hljs-keyword">double</span><br><br>强制类型转换:<br>目标类型变量名=(目标类型)值或者变量<br>例:<span class="hljs-keyword">int</span> k=(<span class="hljs-keyword">int</span>)<span class="hljs-number">88.88</span>;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> HelloWorld&#123;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> main(String[]args)&#123;<br><span class="hljs-keyword">double</span> d =<span class="hljs-number">10</span>;<br>System.out.<span class="hljs-keyword">println</span>(d); <span class="hljs-comment">//结果为10.0</span><br><span class="hljs-keyword">byte</span> b=<span class="hljs-number">10</span>;<br><span class="hljs-keyword">short</span> s=b;<br><span class="hljs-keyword">int</span> i=b;<br><span class="hljs-keyword">char</span> c=b; <span class="hljs-comment">//这是不可以的，类型不兼容</span><br><span class="hljs-keyword">int</span> k=(<span class="hljs-keyword">int</span>)<span class="hljs-number">88.88</span> <span class="hljs-comment">//强制转换结果为88</span><br>system.out.<span class="hljs-keyword">println</span>(k);<br>&#125;<br><br>&#125;<br></code></pre></td></tr></table></figure></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>step</title>
    <link href="/2022/06/23/step/"/>
    <url>/2022/06/23/step/</url>
    
    <content type="html"><![CDATA[<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-keyword">first</span>:hexo g<br></code></pre></td></tr></table></figure><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-keyword">second</span>:hexo s<br></code></pre></td></tr></table></figure> <figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs applescript"><span class="hljs-keyword">third</span>:hexo d <br></code></pre></td></tr></table></figure>  <figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vbnet"><span class="hljs-symbol">creat:</span>hexo <span class="hljs-built_in">new</span> ×××<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>first</title>
    <link href="/2022/06/23/first/"/>
    <url>/2022/06/23/first/</url>
    
    <content type="html"><![CDATA[<p>my first blog</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>helloworld</title>
    <link href="/2022/06/23/helloworld/"/>
    <url>/2022/06/23/helloworld/</url>
    
    <content type="html"><![CDATA[<p>11111</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/06/23/hello-world/"/>
    <url>/2022/06/23/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
